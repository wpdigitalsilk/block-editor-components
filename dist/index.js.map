{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@digitalsilk/block-editor-components/webpack/bootstrap","webpack://@digitalsilk/block-editor-components/webpack/runtime/compat get default export","webpack://@digitalsilk/block-editor-components/webpack/runtime/define property getters","webpack://@digitalsilk/block-editor-components/webpack/runtime/hasOwnProperty shorthand","webpack://@digitalsilk/block-editor-components/webpack/runtime/make namespace object","webpack://@digitalsilk/block-editor-components/external commonjs2 \"@wordpress/data\"","webpack://@digitalsilk/block-editor-components/external commonjs2 \"@wordpress/core-data\"","webpack://@digitalsilk/block-editor-components/./hooks/use-media/index.js","webpack://@digitalsilk/block-editor-components/external commonjs2 \"@wordpress/block-editor\"","webpack://@digitalsilk/block-editor-components/./hooks/use-editor-settings/index.js","webpack://@digitalsilk/block-editor-components/external commonjs2 \"@wordpress/element\"","webpack://@digitalsilk/block-editor-components/external commonjs2 \"@wordpress/components\"","webpack://@digitalsilk/block-editor-components/./components/image/index.js","webpack://@digitalsilk/block-editor-components/external commonjs2 \"@wordpress/i18n\"","webpack://@digitalsilk/block-editor-components/external commonjs2 \"@wordpress/api-fetch\"","webpack://@digitalsilk/block-editor-components/external commonjs2 \"@emotion/styled\"","webpack://@digitalsilk/block-editor-components/./components/icon-picker/index.js","webpack://@digitalsilk/block-editor-components/./components/image-picker/index.js","webpack://@digitalsilk/block-editor-components/./components/media-toolbar/index.js","webpack://@digitalsilk/block-editor-components/./components/background-overlay/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@wordpress/data\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@wordpress/core-data\");","import { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\nexport function useMedia(id) {\n\treturn useSelect(\n\t\t(select) => {\n\t\t\tconst { getMedia, isResolving, hasFinishedResolution } = select(coreStore);\n\n\t\t\tconst mediaParameters = [id, { context: 'view' }];\n\n\t\t\treturn {\n\t\t\t\tmedia: getMedia(...mediaParameters),\n\t\t\t\tisResolvingMedia: isResolving('getMedia', mediaParameters),\n\t\t\t\thasResolvedMedia: hasFinishedResolution('getMedia', mediaParameters),\n\t\t\t};\n\t\t},\n\t\t[id],\n\t);\n}\n","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@wordpress/block-editor\");","import { useSelect } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\nexport function useEditorSettings() {\n\treturn useSelect((select) => {\n\t\tconst { getSettings } = select(blockEditorStore);\n\n\t\tconst settings = getSettings();\n\n\t\treturn settings;\n\t}, []);\n}\n","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@wordpress/element\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@wordpress/components\");","import { Spinner, Placeholder } from '@wordpress/components';\nimport PropTypes from 'prop-types';\nimport { useMedia } from '../../hooks/use-media';\n\nexport const Image = (props) => {\n\tconst { id, size, focalPoint, isBackground, ...rest } = props;\n\n\tconst hasImage = !!id;\n\tconst { media, isResolvingMedia } = useMedia(id);\n\n\tconst imageUrl = media?.media_details?.sizes?.[size]?.source_url ?? media?.source_url;\n\tconst altText = media?.alt_text;\n\n\tif (isBackground && focalPoint && (focalPoint.x !== 0.5 || focalPoint.y !== 0.5)) {\n\t\tconst focalPointStyle = {\n\t\t\tobjectFit: 'cover',\n\t\t\tobjectPosition: `${focalPoint.x * 100}% ${focalPoint.y * 100}%`,\n\t\t};\n\n\t\trest.style = {\n\t\t\t...rest.style,\n\t\t\t...focalPointStyle,\n\t\t};\n\t}\n\n\treturn <>{isBackground ? <div className=\"ds-media is-background\">{!hasImage ? <Placeholder className=\"ds-media__image ds-media-placeholder\" withIllustration /> : <img src={imageUrl} className=\"ds-media__image\" alt={altText} {...rest} />}</div> : <>{!hasImage ? <Placeholder className=\"ds-media__image ds-media-placeholder\" withIllustration /> : isResolvingMedia ? <Spinner /> : <img src={imageUrl} className=\"ds-media__image\" alt={altText} />}</>}</>;\n};\n\nImage.defaultProps = {\n\tsize: 'full',\n\tfocalPoint: { x: 0.5, y: 0.5 },\n\tisBackground: false,\n};\n\nImage.propTypes = {\n\tid: PropTypes.number.isRequired,\n\tsize: PropTypes.string,\n\tfocalPoint: PropTypes.shape({\n\t\tx: PropTypes.number,\n\t\ty: PropTypes.number,\n\t}),\n\tisBackground: PropTypes.bool,\n};\n","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@wordpress/i18n\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@wordpress/api-fetch\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@emotion/styled\");","import PropTypes from 'prop-types';\nimport { __ } from '@wordpress/i18n';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { PanelBody } from '@wordpress/components';\nimport { useState, useEffect } from '@wordpress/element';\nimport apiFetch from '@wordpress/api-fetch';\nimport styled from '@emotion/styled';\n\nconst IconList = styled.ul`\n\tlist-style: none;\n\tmargin: 0;\n\tpadding: 0;\n\tdisplay: grid;\n\tgrid-template-columns: repeat(5, 1fr);\n\tgrid-gap: 12px;\n\tli {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tcolor: #000;\n\t\tjustify-content: center;\n\t\tmargin: 0;\n\t\tpadding: 3px;\n\t\tborder: 2px solid transparent;\n\t}\n\n\tli.selected {\n\t\tborder-color: #000;\n\t}\n`;\n\nconst IconPicker = (props) => {\n\tconst { onSelectIcon, icon, width, height } = props; // New prop to handle icon selection\n\tconst [spriteUrl, setSpriteUrl] = useState('');\n\tconst [icons, setIcons] = useState([]);\n\tconst [selectedIcon, setSelectedIcon] = useState(icon);\n\n\tuseEffect(() => {\n\t\tconst fetchIcons = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await apiFetch({\n\t\t\t\t\tpath: '/ds/v1/icons/',\n\t\t\t\t});\n\t\t\t\tsetSpriteUrl(response?.sprite || '');\n\t\t\t\tsetIcons(response?.icons || []);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log('Error fetching icons');\n\t\t\t\tconsole.warn(error);\n\t\t\t}\n\t\t};\n\n\t\tfetchIcons();\n\t}, []);\n\n\tconst handleIconClick = (selectedIcon) => {\n\t\tsetSelectedIcon(selectedIcon);\n\t\tonSelectIcon(selectedIcon); // Pass the selected icon to the parent component\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={__('Icon Picker')}>\n\t\t\t\t\t<IconList>\n\t\t\t\t\t\t{icons.map((icon) => (\n\t\t\t\t\t\t\t<li key={icon.name} onClick={() => handleIconClick(icon)} className={selectedIcon?.name === icon.name ? 'selected' : ''}>\n\t\t\t\t\t\t\t\t<img src={icon.url} alt={icon.name} />\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</IconList>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\n\t\t\t<svg className={`icon icon-${icon}`} aria-hidden=\"true\" width={width} height={height} role=\"img\">\n\t\t\t\t<use href={`${spriteUrl}#${icon}`} />\n\t\t\t</svg>\n\t\t</>\n\t);\n};\n\nIconPicker.defaultProps = {\n\twidth: 44,\n\theight: 44,\n\ticon: {},\n};\n\nIconPicker.propTypes = {\n\twidth: PropTypes.number,\n\theight: PropTypes.number,\n\tonSelectIcon: PropTypes.func.isRequired,\n\ticon: PropTypes.object,\n};\n\nexport { IconPicker };\n","import { __ } from '@wordpress/i18n';\nimport { MediaPlaceholder, InspectorControls, MediaUploadCheck, __experimentalImageSizeControl as ImageSizeControl } from '@wordpress/block-editor';\nimport { Spinner, FocalPointPicker, PanelBody } from '@wordpress/components';\nimport { useState, useEffect } from '@wordpress/element';\n\nimport PropTypes from 'prop-types';\nimport { MediaToolbar, Image } from '../index';\n\nimport { useMedia, useEditorSettings } from '../../hooks';\n\nexport const ImagePicker = (props) => {\n\tconst { id, focalPoint, size, onSelect, onRemove, onChangeFocalPoint, onSizeChange, labels = {}, allowedTypes = ['image'], panelLabel, mode } = props;\n\n\tconst { imageSizes } = useEditorSettings();\n\tconst { media, isResolvingMedia } = useMedia(id);\n\tconst [availableImageSizes, setAvailableImageSizes] = useState([]);\n\n\tconst hasImage = !!id;\n\tconst shouldDisplayFocalPointPicker = typeof onChangeFocalPoint === 'function';\n\tconst shouldDisplaySizePicker = typeof onSizeChange === 'function';\n\n\tuseEffect(() => {\n\t\tif (imageSizes) {\n\t\t\tconst availableImageSizes = imageSizes.map(({ slug, name }) => ({ value: slug, label: name }));\n\t\t\tsetAvailableImageSizes(availableImageSizes);\n\t\t}\n\t}, [imageSizes]);\n\n\tif (!hasImage) {\n\t\treturn (\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={panelLabel}>\n\t\t\t\t\t<MediaUploadCheck>\n\t\t\t\t\t\t<MediaPlaceholder labels={labels} onSelect={onSelect} accept=\"image\" multiple={false} allowedTypes={allowedTypes} />\n\t\t\t\t\t</MediaUploadCheck>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t);\n\t}\n\n\tif (isResolvingMedia) {\n\t\treturn <Spinner />;\n\t}\n\n\tconst imageUrl = media?.media_details?.sizes?.[size]?.source_url ?? media?.source_url;\n\n\treturn (\n\t\t<>\n\t\t\t{(shouldDisplayFocalPointPicker || shouldDisplaySizePicker) && (\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody title={panelLabel}>\n\t\t\t\t\t\t<MediaToolbar id={id} onSelect={onSelect} onRemove={onRemove} />\n\n\t\t\t\t\t\t{shouldDisplayFocalPointPicker && <FocalPointPicker label={__('Focal Point Picker')} url={imageUrl} value={focalPoint} onChange={onChangeFocalPoint} />}\n\t\t\t\t\t\t{shouldDisplaySizePicker && <ImageSizeControl isResizable={false} onChangeImage={onSizeChange} slug={size} imageSizeOptions={availableImageSizes} />}\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\t\t\t)}\n\n\t\t\t{mode === 'preview' && <Image id={id} size={size} focalPoint={focalPoint} />}\n\t\t</>\n\t);\n};\n\nImagePicker.defaultProps = {\n\tsize: 'full',\n\tfocalPoint: { x: 0.5, y: 0.5 },\n\tonChangeFocalPoint: undefined,\n\tonSizeChange: undefined,\n\tlabels: {},\n\tallowedTypes: ['image'],\n\tpanelLabel: __('Image Settings'),\n\tmode: '',\n};\n\nImagePicker.propTypes = {\n\tid: PropTypes.number.isRequired,\n\tsize: PropTypes.string,\n\tonSelect: PropTypes.func.isRequired,\n\tonSizeChange: PropTypes.func,\n\tonRemove: PropTypes.func.isRequired,\n\tonChangeFocalPoint: PropTypes.func,\n\tallowedTypes: PropTypes.array,\n\tfocalPoint: PropTypes.shape({\n\t\tx: PropTypes.number,\n\t\ty: PropTypes.number,\n\t}),\n\tlabels: PropTypes.shape({\n\t\ttitle: PropTypes.string,\n\t\tinstructions: PropTypes.string,\n\t}),\n\tpanelLabel: PropTypes.string,\n\tmode: PropTypes.string,\n};\n","import { __ } from '@wordpress/i18n';\nimport { MediaReplaceFlow, MediaUpload, MediaUploadCheck } from '@wordpress/block-editor';\nimport { ToolbarGroup, ToolbarButton } from '@wordpress/components';\nimport PropTypes from 'prop-types';\nimport { useMedia } from '../../hooks/use-media';\n\nexport const MediaToolbar = (props) => {\n\tconst { onSelect, onRemove, id } = props;\n\n\tconst hasImage = !!id;\n\tconst { media } = useMedia(id);\n\n\treturn (\n\t\t<ToolbarGroup label={__('Media')}>\n\t\t\t{hasImage ? (\n\t\t\t\t<>\n\t\t\t\t\t<MediaReplaceFlow mediaUrl={media?.source_url} onSelect={onSelect} name={__('Replace Image')} />\n\t\t\t\t\t<ToolbarButton onClick={onRemove}>{__('Remove Image')}</ToolbarButton>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<MediaUploadCheck>\n\t\t\t\t\t<MediaUpload onSelect={onSelect} render={({ open }) => <ToolbarButton onClick={open}>{__('Add Image')}</ToolbarButton>} />\n\t\t\t\t</MediaUploadCheck>\n\t\t\t)}\n\t\t</ToolbarGroup>\n\t);\n};\n\nMediaToolbar.defaultProps = {};\n\nMediaToolbar.propTypes = {\n\tid: PropTypes.number.isRequired,\n\tonSelect: PropTypes.func.isRequired,\n\tonRemove: PropTypes.func.isRequired,\n};\n","import { __ } from '@wordpress/i18n';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { ColorPalette, GradientPicker, PanelBody, RangeControl, __experimentalToggleGroupControl as ToggleGroupControl, __experimentalToggleGroupControlOption as ToggleGroupControlOption } from '@wordpress/components';\nimport PropTypes from 'prop-types';\nimport { useEditorSettings } from '../../hooks';\n\nexport const BackgroundOverlay = (props) => {\n\tconst { overlayType, overlayColor, overlayGradient, overlayOpacity, onSetOverlayType, onSetOverlayColor, onSetOverlayGradient, onSetOverlayOpacity, ...rest } = props;\n\n\tconst { colors, gradients } = useEditorSettings();\n\n\tconst handleColorSelect = (colorHex) => {\n\t\tconst matchingItem = colors.find((item) => item.color === colorHex);\n\n\t\tif (matchingItem) {\n\t\t\tonSetOverlayColor(matchingItem);\n\t\t} else {\n\t\t\tonSetOverlayColor({});\n\t\t}\n\t};\n\n\tconst handleGradientSelect = (gradient) => {\n\t\tconst matchingItem = gradients.find((item) => item.gradient === gradient);\n\n\t\tif (matchingItem) {\n\t\t\tonSetOverlayGradient(matchingItem);\n\t\t} else {\n\t\t\tonSetOverlayGradient({});\n\t\t}\n\t};\n\n\tconst divStyle = {\n\t\topacity: overlayOpacity / 100,\n\t};\n\n\trest.style = {\n\t\t...rest.style,\n\t\t...divStyle,\n\t};\n\n\tlet css_class_name = '';\n\n\tif (overlayType === 'color' && overlayColor) {\n\t\tconst colorSlug = overlayColor?.slug ? overlayColor.slug : '';\n\n\t\tif (colorSlug) {\n\t\t\tcss_class_name = `has-${colorSlug}-background-color`;\n\t\t}\n\t}\n\n\tif (overlayType === 'gradient' && overlayGradient) {\n\t\tconst gradientSlug = overlayGradient?.slug ? overlayGradient.slug : '';\n\n\t\tif (gradientSlug) {\n\t\t\tcss_class_name = `has-${gradientSlug}-gradient-background`;\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={__('Overlay Settings')}>\n\t\t\t\t\t<RangeControl __nextHasNoMargin label={__('Overlay Opacity')} value={overlayOpacity} onChange={(opacity) => onSetOverlayOpacity(opacity)} min={0} max={100} />\n\n\t\t\t\t\t<ToggleGroupControl label={__('Overlay Type')} value={overlayType} isBlock onChange={(value) => onSetOverlayType(value)}>\n\t\t\t\t\t\t<ToggleGroupControlOption value=\"color\" label={__('Color')} />\n\t\t\t\t\t\t<ToggleGroupControlOption value=\"gradient\" label={__('Gradient')} />\n\t\t\t\t\t</ToggleGroupControl>\n\n\t\t\t\t\t{overlayType === 'color' && <ColorPalette colors={colors} value={overlayColor?.color} onChange={(color) => handleColorSelect(color)} disableCustomColors />}\n\n\t\t\t\t\t{overlayType === 'gradient' && <GradientPicker __nextHasNoMargin value={overlayGradient?.gradient ? overlayGradient.gradient : ''} gradients={gradients} onChange={(currentGradient) => handleGradientSelect(currentGradient)} disableCustomGradients asButtons />}\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\n\t\t\t<div className={`background-overlay ${css_class_name}`} {...rest} />\n\t\t</>\n\t);\n};\n\nBackgroundOverlay.defaultProps = {\n\toverlayType: '',\n\toverlayColor: {},\n\toverlayGradient: {},\n\toverlayOpacity: 25,\n};\n\nBackgroundOverlay.propTypes = {\n\toverlayType: PropTypes.string,\n\toverlayColor: PropTypes.object,\n\toverlayGradient: PropTypes.object,\n\toverlayOpacity: PropTypes.number,\n\tonSetOverlayType: PropTypes.func.isRequired,\n\tonSetOverlayColor: PropTypes.func.isRequired,\n\tonSetOverlayGradient: PropTypes.func.isRequired,\n\tonSetOverlayOpacity: PropTypes.func.isRequired,\n};\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","require","useMedia","id","useSelect","select","getMedia","isResolving","hasFinishedResolution","coreStore","mediaParameters","context","media","isResolvingMedia","hasResolvedMedia","useEditorSettings","getSettings","blockEditorStore","Image","props","size","focalPoint","isBackground","rest","hasImage","imageUrl","media_details","sizes","source_url","altText","alt_text","x","y","focalPointStyle","objectFit","objectPosition","style","createElement","Fragment","className","_extends","src","alt","Placeholder","withIllustration","Spinner","defaultProps","IconList","styled","IconPicker","onSelectIcon","icon","width","height","spriteUrl","setSpriteUrl","useState","icons","setIcons","selectedIcon","setSelectedIcon","useEffect","async","response","apiFetch","path","sprite","error","console","log","warn","fetchIcons","InspectorControls","PanelBody","title","__","map","name","onClick","handleIconClick","url","role","href","ImagePicker","onSelect","onRemove","onChangeFocalPoint","onSizeChange","labels","allowedTypes","panelLabel","mode","imageSizes","availableImageSizes","setAvailableImageSizes","shouldDisplayFocalPointPicker","shouldDisplaySizePicker","slug","label","MediaUploadCheck","MediaPlaceholder","accept","multiple","MediaToolbar","FocalPointPicker","onChange","ImageSizeControl","isResizable","onChangeImage","imageSizeOptions","undefined","ToolbarGroup","MediaReplaceFlow","mediaUrl","ToolbarButton","MediaUpload","render","open","BackgroundOverlay","overlayType","overlayColor","overlayGradient","overlayOpacity","onSetOverlayType","onSetOverlayColor","onSetOverlayGradient","onSetOverlayOpacity","colors","gradients","divStyle","opacity","css_class_name","colorSlug","gradientSlug","RangeControl","__nextHasNoMargin","min","max","ToggleGroupControl","isBlock","ToggleGroupControlOption","ColorPalette","color","colorHex","matchingItem","find","item","handleColorSelect","disableCustomColors","GradientPicker","gradient","currentGradient","handleGradientSelect","disableCustomGradients","asButtons"],"sourceRoot":""}