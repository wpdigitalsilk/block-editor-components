{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@digitalsilk/block-editor-components/./node_modules/react/cjs/react.production.min.js","webpack://@digitalsilk/block-editor-components/./node_modules/react/index.js","webpack://@digitalsilk/block-editor-components/./node_modules/classnames/index.js","webpack://@digitalsilk/block-editor-components/webpack/bootstrap","webpack://@digitalsilk/block-editor-components/webpack/runtime/compat get default export","webpack://@digitalsilk/block-editor-components/webpack/runtime/define property getters","webpack://@digitalsilk/block-editor-components/webpack/runtime/hasOwnProperty shorthand","webpack://@digitalsilk/block-editor-components/webpack/runtime/make namespace object","webpack://@digitalsilk/block-editor-components/external commonjs2 \"@wordpress/data\"","webpack://@digitalsilk/block-editor-components/external commonjs2 \"@wordpress/core-data\"","webpack://@digitalsilk/block-editor-components/./selectors/get-media/index.js","webpack://@digitalsilk/block-editor-components/external commonjs2 \"@wordpress/block-editor\"","webpack://@digitalsilk/block-editor-components/./selectors/get-editor-settings/index.js","webpack://@digitalsilk/block-editor-components/./selectors/get-poster/index.js","webpack://@digitalsilk/block-editor-components/external commonjs2 \"@wordpress/element\"","webpack://@digitalsilk/block-editor-components/./selectors/get-outside-click-ref/index.js","webpack://@digitalsilk/block-editor-components/./selectors/get-posts/index.js","webpack://@digitalsilk/block-editor-components/./selectors/get-site-settings/index.js","webpack://@digitalsilk/block-editor-components/./selectors/get-author/index.js","webpack://@digitalsilk/block-editor-components/./selectors/get-terms/index.js","webpack://@digitalsilk/block-editor-components/external commonjs2 \"@wordpress/notices\"","webpack://@digitalsilk/block-editor-components/./notices/on-click-notice/index.js","webpack://@digitalsilk/block-editor-components/external commonjs2 \"@wordpress/components\"","webpack://@digitalsilk/block-editor-components/./components/media-toolbar/index.js","webpack://@digitalsilk/block-editor-components/./components/media-picker/index.js","webpack://@digitalsilk/block-editor-components/./components/image/index.js","webpack://@digitalsilk/block-editor-components/./components/video/index.js","webpack://@digitalsilk/block-editor-components/./components/media-display/index.js","webpack://@digitalsilk/block-editor-components/external commonjs2 \"@wordpress/api-fetch\"","webpack://@digitalsilk/block-editor-components/./components/theme-icon/index.js","webpack://@digitalsilk/block-editor-components/./components/icon-picker/index.js","webpack://@digitalsilk/block-editor-components/./components/overlay-display/index.js","webpack://@digitalsilk/block-editor-components/./components/overlay-picker/index.js","webpack://@digitalsilk/block-editor-components/external commonjs2 \"uuid\"","webpack://@digitalsilk/block-editor-components/external commonjs2 \"@wordpress/icons\"","webpack://@digitalsilk/block-editor-components/./components/repeater/index.js","webpack://@digitalsilk/block-editor-components/./components/link/index.js","webpack://@digitalsilk/block-editor-components/./components/link-wrap/index.js","webpack://@digitalsilk/block-editor-components/external commonjs2 \"@dnd-kit/core\"","webpack://@digitalsilk/block-editor-components/external commonjs2 \"@dnd-kit/sortable\"","webpack://@digitalsilk/block-editor-components/./node_modules/@dnd-kit/utilities/dist/utilities.esm.js","webpack://@digitalsilk/block-editor-components/external commonjs2 \"@wordpress/url\"","webpack://@digitalsilk/block-editor-components/external commonjs2 \"@wordpress/html-entities\"","webpack://@digitalsilk/block-editor-components/./components/content-picker/PickedItem.js","webpack://@digitalsilk/block-editor-components/./components/content-picker/SortableList.js","webpack://@digitalsilk/block-editor-components/external commonjs2 \"prop-types\"","webpack://@digitalsilk/block-editor-components/external commonjs2 \"@wordpress/rich-text\"","webpack://@digitalsilk/block-editor-components/./components/content-search/SearchItem.js","webpack://@digitalsilk/block-editor-components/./components/content-search/index.js","webpack://@digitalsilk/block-editor-components/./components/content-picker/index.js"],"sourcesContent":["/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@wordpress/data\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@wordpress/core-data\");","import { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Retrieves media details and resolution status for a given attachment ID.\n *\n * @param {number} attachmentId - The ID of the media attachment to retrieve.\n * @return {object} An object containing media details, resolution status, and resolution completion status.\n */\nexport function getMedia(attachmentId) {\n\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\treturn useSelect(\n\t\t(select) => {\n\t\t\t// @ts-ignore\n\t\t\tconst { getMedia, isResolving, hasFinishedResolution } = select(coreStore);\n\n\t\t\tconst mediaParameters = [attachmentId, { context: 'view' }];\n\n\t\t\treturn {\n\t\t\t\tmediaDetails: getMedia(...mediaParameters),\n\t\t\t\tisResolvingMedia: isResolving('getMedia', mediaParameters),\n\t\t\t\thasResolvedMedia: hasFinishedResolution('getMedia', mediaParameters),\n\t\t\t};\n\t\t},\n\t\t[attachmentId],\n\t);\n}\n","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@wordpress/block-editor\");","import { useSelect } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * Retrieves the current editor settings from the block editor store.\n *\n * @return {object} The current settings of the block editor.\n */\nexport function getEditorSettings() {\n\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\treturn useSelect((select) => {\n\t\tconst { getSettings } = select(blockEditorStore);\n\n\t\tconst settings = getSettings();\n\n\t\treturn settings;\n\t}, []);\n}\n","import { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Retrieves the poster URL for a given attachment and size.\n *\n * @param {number} attachmentId The ID of the media attachment.\n * @param {string} size The size of the poster to retrieve.\n * @return {object} An object containing the poster URL, and resolution states.\n */\nexport function getPoster(attachmentId, size) {\n\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\treturn useSelect(\n\t\t(select) => {\n\t\t\t// @ts-ignore\n\t\t\tconst { getMedia, isResolving, hasFinishedResolution } = select(coreStore);\n\n\t\t\tconst mediaParameters = [attachmentId, { context: 'view' }];\n\n\t\t\tconst media = getMedia(...mediaParameters);\n\n\t\t\tconst url = media?.media?.sizes?.[size]?.source_url || media?.source_url || '';\n\n\t\t\treturn {\n\t\t\t\tposterUrl: url,\n\t\t\t\tisResolvingPoster: isResolving('getMedia', mediaParameters),\n\t\t\t\thasResolvedPoster: hasFinishedResolution('getMedia', mediaParameters),\n\t\t\t};\n\t\t},\n\t\t[attachmentId, size],\n\t);\n}\n","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@wordpress/element\");","import { useEffect, useRef } from '@wordpress/element';\n\n/**\n * getOutsideClickRef\n *\n * @param {Function} onClickOutside callback that will get invoked when the user clicks outside of the target\n * @returns {object} ref to the target element\n */\nexport function getOutsideClickRef(onClickOutside) {\n\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\tconst ref = useRef();\n\n\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\tuseEffect(() => {\n\t\tconst listener = (event) => {\n\t\t\t// Do nothing if clicking ref's element or descendent elements\n\t\t\tif (!ref.current || ref.current.contains(event.target)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tonClickOutside(event);\n\t\t};\n\t\tdocument.addEventListener('mousedown', listener);\n\t\tdocument.addEventListener('touchstart', listener);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('mousedown', listener);\n\t\t\tdocument.removeEventListener('touchstart', listener);\n\t\t};\n\t}, [ref, onClickOutside]);\n\n\treturn ref;\n}\n","import { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Fetches posts of a specified type and query parameters using the WordPress data store.\n *\n * @param {string} postType - The type of post to fetch.\n * @param {object} queryParams - The query parameters to pass when fetching posts.\n * @return {object} An object containing the posts and their resolution states.\n */\nexport function getPosts(postType = 'post', queryParams = {}) {\n\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\treturn useSelect(\n\t\t(select) => {\n\t\t\t// @ts-ignore\n\t\t\tconst { getEntityRecords, hasStartedResolution, hasFinishedResolution, isResolving } = select(coreStore);\n\n\t\t\tconst query = { per_page: 10, ...queryParams };\n\t\t\tconst selectorArgs = ['postType', postType, query];\n\n\t\t\treturn {\n\t\t\t\tposts: getEntityRecords(...selectorArgs),\n\t\t\t\thasStartedResolution: hasStartedResolution('getEntityRecords', selectorArgs),\n\t\t\t\thasFinishedResolution: hasFinishedResolution('getEntityRecords', selectorArgs),\n\t\t\t\tisResolving: isResolving('getEntityRecords', selectorArgs),\n\t\t\t};\n\t\t},\n\t\t[postType],\n\t);\n}\n\n/**\n * Fetches a post from the store based on the provided post ID and post type.\n *\n * @param {number|string} postId - The unique identifier of the post.\n * @param {string} [postType='post'] - The type of the post (default is 'post').\n * @return {object} An object containing the post data and resolution status.\n */\nexport function getPost(postId, postType = 'post') {\n\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\treturn useSelect(\n\t\t(select) => {\n\t\t\t// @ts-ignore\n\t\t\tconst { getEntityRecord, hasStartedResolution, hasFinishedResolution, isResolving } = select(coreStore);\n\t\t\tconst selectorArgs = ['postType', postType, postId];\n\n\t\t\treturn {\n\t\t\t\tpost: getEntityRecord(...selectorArgs),\n\t\t\t\thasStartedResolution: hasStartedResolution('getEntityRecord', selectorArgs),\n\t\t\t\thasFinishedResolution: hasFinishedResolution('getEntityRecord', selectorArgs),\n\t\t\t\tisResolving: isResolving('getEntityRecord', selectorArgs),\n\t\t\t};\n\t\t},\n\t\t[postId, postType],\n\t);\n}\n","import { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Retrieves the settings for the site using the WordPress data store.\n * This function returns an object containing the following properties:\n * - `settings`: The site settings achieved by making a call to `getEntityRecord`\n * - `hasStartedResolution`: A boolean indicating whether the resolution of the settings has started\n * - `hasFinishedResolution`: A boolean indicating whether the resolution of the settings has completed\n * - `isResolving`: A boolean indicating whether the settings are currently being resolved\n *\n * @return {object} An object containing the site's settings and the states of the resolution process\n */\nexport function getSiteSettings() {\n\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\treturn useSelect((select) => {\n\t\t// @ts-ignore\n\t\tconst { getEntityRecord, hasStartedResolution, hasFinishedResolution, isResolving } = select(coreStore);\n\n\t\treturn {\n\t\t\tsettings: getEntityRecord('root', 'site'),\n\t\t\thasStartedResolution: hasStartedResolution('getEntityRecord', ['root', 'site']),\n\t\t\thasFinishedResolution: hasFinishedResolution('getEntityRecord', ['root', 'site']),\n\t\t\tisResolving: isResolving('getEntityRecord', ['root', 'site']),\n\t\t};\n\t}, []);\n}\n","import { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Retrieves the author information for a given post.\n *\n * @param {number|string} postId - The ID of the post for which to retrieve the author information.\n * @param {string} postType - The type of the post.\n * @return {object} Returns an object containing authorData, a boolean indicating if the author information has been resolved, and a boolean indicating if the author information is still resolving.\n */\nexport function getAuthor(postId, postType) {\n\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\treturn useSelect(\n\t\t(select) => {\n\t\t\t// @ts-ignore\n\t\t\tconst { getEntityRecord, hasFinishedResolution, isResolving, getUser } = select(coreStore);\n\t\t\tconst selectorArgs = ['postType', postType, postId];\n\n\t\t\t// @ts-ignore\n\t\t\tconst post = getEntityRecord(...selectorArgs);\n\t\t\tconst hasResolvedPost = hasFinishedResolution('getEntityRecord', selectorArgs);\n\n\t\t\t// @ts-ignore\n\t\t\tconst _authorId = hasResolvedPost ? post?.author : undefined;\n\n\t\t\tconst authorData = getUser(_authorId);\n\t\t\tconst hasResolvedAuthor = hasFinishedResolution('getUser', [_authorId]);\n\t\t\tconst isResolvingAuthor = isResolving('getUser', [_authorId]);\n\n\t\t\treturn {\n\t\t\t\tauthorData,\n\t\t\t\thasResolvedAuthor: hasResolvedAuthor && hasResolvedPost,\n\t\t\t\tisResolvingAuthor,\n\t\t\t};\n\t\t},\n\t\t[postId, postType],\n\t);\n}\n","import { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Fetches terms associated with a given post.\n *\n * @param {number} postId - The ID of the post for which to retrieve terms.\n * @param {string} postType - The type of the post (e.g., 'post', 'page').\n * @param {string} taxonomyName - The name of the taxonomy (e.g., 'category', 'tag').\n * @param {string} [itemSelector='categories'] - The property of the post object that holds the term IDs.\n * @return {object} An object containing the terms, whether the terms have been resolved, and whether the terms are still resolving.\n */\nexport function getPostTerms(postId, postType, taxonomyName, itemSelector = 'categories') {\n\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\treturn useSelect(\n\t\t(select) => {\n\t\t\t// @ts-ignore\n\t\t\tconst { getEntityRecord, getEntityRecords, hasFinishedResolution, isResolving } = select(coreStore);\n\t\t\tconst selectorArgs = ['postType', postType, postId];\n\n\t\t\tconst post = getEntityRecord(...selectorArgs);\n\t\t\tconst hasResolvedPost = hasFinishedResolution('getEntityRecord', selectorArgs);\n\n\t\t\tconst termIds = hasResolvedPost ? post?.[itemSelector] : [];\n\n\t\t\tconst termsSelector = [\n\t\t\t\t'taxonomy',\n\t\t\t\ttaxonomyName,\n\t\t\t\t{\n\t\t\t\t\tper_page: -1,\n\t\t\t\t\tcontext: 'view',\n\t\t\t\t\tinclude: termIds,\n\t\t\t\t},\n\t\t\t];\n\n\t\t\tconst terms = getEntityRecords(...termsSelector);\n\t\t\tconst hasResolvedTerms = hasFinishedResolution('getEntityRecords', termsSelector);\n\t\t\tconst isResolvingTerms = isResolving('getEntityRecords', termsSelector);\n\n\t\t\treturn {\n\t\t\t\tterms,\n\t\t\t\thasResolvedTerms: hasResolvedTerms && hasResolvedPost,\n\t\t\t\tisResolvingTerms,\n\t\t\t};\n\t\t},\n\t\t[postId, postType, taxonomyName, itemSelector],\n\t);\n}\n\n/**\n * Retrieves terms for a given taxonomy.\n *\n * @param {string} taxonomyName The name of the taxonomy to retrieve terms for.\n * @param {object} [query={}] Optional query parameters to filter the terms.\n * @return {object} An object containing:\n * - terms: The retrieved terms.\n * - hasResolvedTerms: Boolean indicating if the terms have finished resolving.\n * - isResolvingTerms: Boolean indicating if the terms query is still resolving.\n */\nexport function getTerms(taxonomyName, query = {}) {\n\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\treturn useSelect(\n\t\t(select) => {\n\t\t\t// @ts-ignore\n\t\t\tconst { getEntityRecords, hasFinishedResolution, isResolving } = select(coreStore);\n\n\t\t\tconst termsSelector = [\n\t\t\t\t'taxonomy',\n\t\t\t\ttaxonomyName,\n\t\t\t\t{\n\t\t\t\t\tper_page: -1,\n\t\t\t\t\tcontext: 'view',\n\t\t\t\t\t...query,\n\t\t\t\t},\n\t\t\t];\n\n\t\t\tconst terms = getEntityRecords(...termsSelector);\n\t\t\tconst hasResolvedTerms = hasFinishedResolution('getEntityRecords', termsSelector);\n\t\t\tconst isResolvingTerms = isResolving('getEntityRecords', termsSelector);\n\n\t\t\treturn {\n\t\t\t\tterms,\n\t\t\t\thasResolvedTerms,\n\t\t\t\tisResolvingTerms,\n\t\t\t};\n\t\t},\n\t\t[taxonomyName],\n\t);\n}\n","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@wordpress/notices\");","import { store as noticeStore } from '@wordpress/notices';\nimport { useDispatch } from '@wordpress/data';\n\n/**\n * Creates a warning notice when a link click is prevented in the editor.\n *\n * @param {string} instanceId - Unique identifier for the instance of the notice.\n * @param {string} [message=__('Links are disabled in the editor.')] - Warning message to be displayed.\n * @returns {Function} Event handler that shows the warning notice upon link click.\n */\nexport const onClickNotice = (instanceId, message = 'Links are disabled in the editor.') => {\n\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\tconst { createWarningNotice, removeNotice } = useDispatch(noticeStore);\n\tlet noticeId;\n\n\tconst showRedirectionPreventedNotice = (event) => {\n\t\tevent.preventDefault();\n\t\t// Remove previous warning if any, to show one at a time per block.\n\t\tremoveNotice(noticeId);\n\t\tnoticeId = `ds-theme/click-redirection-prevented/${instanceId}`;\n\t\tcreateWarningNotice(message, {\n\t\t\tid: noticeId,\n\t\t\ttype: 'snackbar',\n\t\t});\n\t};\n\n\treturn showRedirectionPreventedNotice;\n};\n","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@wordpress/components\");","import PropTypes from 'prop-types';\nimport { MediaReplaceFlow, MediaUpload, MediaUploadCheck } from '@wordpress/block-editor';\nimport { ToolbarGroup, ToolbarButton } from '@wordpress/components';\nimport { getMedia } from '../../selectors';\n\n/**\n * MediaToolbar is a component that provides a toolbar interface for media selection,\n * replacement, and removal actions, tailored for a specific media type.\n *\n * @param {object} props                              The component properties.\n * @param {Function} props.onSelect                   Callback function to handle media selection.\n * @param {Function} props.onRemove                   Callback function to handle media removal.\n * @param {string} [props.id]                         The ID of the selected media.\n * @param {string} [props.mediaType='image']          The type of media to be handled, defaults to 'image'.\n * @param {boolean} [props.multiple=false]            Whether multiple media items can be selected, defaults to false.\n *\n * @returns {JSX.Element}                             The toolbar component for media handling.\n */\nexport const MediaToolbar = ({ onSelect, onRemove, id, mediaType = 'image', multiple = false }) => {\n\tconst hasMedia = !!id;\n\t// @ts-ignore\n\tconst { mediaDetails } = getMedia(id);\n\n\treturn (\n\t\t<ToolbarGroup label=\"Media\">\n\t\t\t{hasMedia ? (\n\t\t\t\t<>\n\t\t\t\t\t<MediaReplaceFlow\n\t\t\t\t\t\tmediaUrl={mediaDetails?.source_url ? mediaDetails.source_url : ''}\n\t\t\t\t\t\tonSelect={onSelect}\n\t\t\t\t\t\tname={`Replace ${mediaType}`}\n\t\t\t\t\t/>\n\t\t\t\t\t<ToolbarButton onClick={onRemove}>{`Remove ${mediaType}`}</ToolbarButton>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<MediaUploadCheck>\n\t\t\t\t\t<MediaUpload\n\t\t\t\t\t\tonSelect={onSelect}\n\t\t\t\t\t\tallowedTypes={[mediaType]} // there is a bug here, this doesn't work when changed, only on load\n\t\t\t\t\t\trender={({ open }) => <ToolbarButton onClick={open}>{`Add ${mediaType}`}</ToolbarButton>}\n\t\t\t\t\t\tmultiple={multiple}\n\t\t\t\t\t/>\n\t\t\t\t</MediaUploadCheck>\n\t\t\t)}\n\t\t</ToolbarGroup>\n\t);\n};\n\nMediaToolbar.propTypes = {\n\tid: PropTypes.number.isRequired,\n\tonSelect: PropTypes.func.isRequired,\n\tonRemove: PropTypes.func.isRequired,\n\tmediaType: PropTypes.string,\n\tmultiple: PropTypes.bool,\n};\n","import PropTypes from 'prop-types';\nimport {\n\tMediaPlaceholder,\n\tInspectorControls,\n\tMediaUploadCheck,\n\t__experimentalImageSizeControl as ImageSizeControl,\n\tBlockControls,\n} from '@wordpress/block-editor';\nimport {\n\tSpinner,\n\tFocalPointPicker,\n\tPanelBody,\n\tToggleControl,\n\t__experimentalToggleGroupControl as ToggleGroupControl,\n\t__experimentalToggleGroupControlOption as ToggleGroupControlOption,\n\tTextControl,\n\tToolbarButton,\n\tToolbarGroup,\n} from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { useState, useEffect } from '@wordpress/element';\nimport { MediaToolbar, Video } from '../index';\nimport { getMedia, getEditorSettings } from '../../selectors';\n\n/**\n * MediaPanelContent is a functional component that provides a user interface\n * for managing media settings including images and videos within a control panel.\n *\n * This variable destructures various props to customize the media settings:\n *\n * @param {object} props - The component props.\n * @param {object} [props.media={}] - An object containing media details.\n * @param {boolean} [props.displayFocalPicker=false] - Flag to enable focal point picker for images.\n * @param {boolean} [props.allowMediaTypeSwitch=false] - Flag to allow switching between media types (image/video).\n * @param {string} [props.controlPanelLabel='Media Settings'] - Label for the control panel.\n * @param {boolean} [props.multiple=false] - Flag indicating if multiple media items are allowed.\n * @param {boolean} [props.showBlockControls=true] - Flag to show/hide block controls.\n * @param {boolean} [props.isBackground=false] - Flag indicating if the media is used as a background.\n * @param {Function} [props.onSelect] - Callback function to handle media selection.\n *\n * @property {number} [media.id=0] - The media ID.\n * @property {string} [media.mediaType='image'] - The type of media (image/video).\n * @property {string} [media.imageSize='full'] - The size of the image.\n * @property {boolean} [media.lazyLoad=true] - Flag to enable/disable lazy loading for images.\n * @property {boolean} [media.srcset=true] - Flag to enable/disable responsive images support (srcset).\n * @property {string} [media.videoSource='internal'] - The video source type (internal/external).\n * @property {string} [media.videoUrl=''] - The URL of the external video.\n * @property {object} [media.focalPoint={x: 0.5, y: 0.5}] - Focal point coordinates for images.\n * @property {object} [media.videoControls={}] - Settings for controlling video playback.\n *\n * @property {boolean} [media.videoControls.autoplay=false] - Flag to enable/disable video autoplay.\n * @property {boolean} [media.videoControls.isMuted=true] - Flag to enable/disable video mute.\n * @property {boolean} [media.videoControls.showControls=true] - Flag to show/hide video controls.\n * @property {number} [media.videoControls.posterId=0] - The ID of the video poster image.\n * @property {string} [media.videoControls.posterSize='full'] - The size of the video poster image.\n *\n */\nexport const MediaPanelContent = (props) => {\n\tconst {\n\t\tmedia = {},\n\t\tdisplayFocalPicker = false,\n\t\tallowMediaTypeSwitch = false,\n\t\tcontrolPanelLabel = 'Media Settings',\n\t\tmultiple = false,\n\t\tshowBlockControls = true,\n\t\tonSelect,\n\t} = props;\n\tconst {\n\t\tid = 0,\n\t\tmediaType = 'image',\n\t\timageSize = 'full',\n\t\tlazyLoad = true,\n\t\tsrcset = true,\n\t\tvideoSource = 'internal',\n\t\tvideoUrl = '',\n\t\tfocalPoint = {\n\t\t\tx: 0.5,\n\t\t\ty: 0.5,\n\t\t},\n\t\tvideoControls = {},\n\t} = media;\n\n\tconst { autoplay = false, isMuted = true, showControls = true, posterId = 0, posterSize = 'full' } = videoControls;\n\n\tconst { imageSizes } = getEditorSettings();\n\tconst { mediaDetails, isResolvingMedia } = getMedia(id);\n\tconst [availableImageSizes, setAvailableImageSizes] = useState([]);\n\n\tconst hasMedia = !!id;\n\n\tuseEffect(() => {\n\t\tif (imageSizes) {\n\t\t\tconst availableImageSizes = imageSizes.map(({ slug, name }) => ({ value: slug, label: name }));\n\t\t\tsetAvailableImageSizes(availableImageSizes);\n\t\t}\n\t}, [imageSizes]);\n\n\tconst { embedPreview } = useSelect(\n\t\t(select) => {\n\t\t\tconst { getEmbedPreview } = select('core');\n\n\t\t\treturn {\n\t\t\t\tembedPreview: videoUrl.length ? getEmbedPreview(videoUrl) : false,\n\t\t\t};\n\t\t},\n\t\t[videoUrl],\n\t);\n\n\tif (isResolvingMedia) {\n\t\treturn <Spinner />;\n\t}\n\n\tconst imageUrl = mediaDetails?.media_details?.sizes?.[imageSize]?.source_url ?? mediaDetails?.source_url;\n\n\tconst handleMediaChange = (value) => {\n\t\tconst newMediaData = { ...media, ...value };\n\t\tonSelect(newMediaData);\n\t};\n\n\tconst handleMediaRemove = () => {\n\t\tconst newMediaData = { ...media, id: 0 };\n\t\tonSelect(newMediaData);\n\t};\n\n\tconst handleVideoColtrol = (value) => {\n\t\tconst newVideoControls = { ...media.videoControls, ...value };\n\t\thandleMediaChange({ videoControls: newVideoControls });\n\t};\n\n\tconst handleMediaTypeChange = (value) => {\n\t\tconst newMediaData = { ...media, id: 0, videoUrl: '', ...value };\n\t\tonSelect(newMediaData);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<PanelBody title={controlPanelLabel}>\n\t\t\t\t{allowMediaTypeSwitch && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ToggleGroupControl\n\t\t\t\t\t\t\tlabel=\"Media Type\"\n\t\t\t\t\t\t\tvalue={mediaType}\n\t\t\t\t\t\t\tisBlock\n\t\t\t\t\t\t\tonChange={(newType) => handleMediaTypeChange({ mediaType: newType })}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ToggleGroupControlOption value=\"image\" label=\"Image\" />\n\t\t\t\t\t\t\t<ToggleGroupControlOption value=\"video\" label=\"Video\" />\n\t\t\t\t\t\t</ToggleGroupControl>\n\n\t\t\t\t\t\t{mediaType === 'video' && (\n\t\t\t\t\t\t\t<ToggleGroupControl\n\t\t\t\t\t\t\t\tlabel=\"Video Source\"\n\t\t\t\t\t\t\t\tvalue={videoSource}\n\t\t\t\t\t\t\t\tisBlock\n\t\t\t\t\t\t\t\tonChange={(value) => handleMediaChange({ videoSource: value })}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ToggleGroupControlOption value=\"internal\" label=\"Internal\" />\n\t\t\t\t\t\t\t\t<ToggleGroupControlOption value=\"external\" label=\"External\" />\n\t\t\t\t\t\t\t</ToggleGroupControl>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\n\t\t\t\t{hasMedia ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{mediaType === 'image' && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<MediaToolbar\n\t\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\t\tonSelect={(selectedMedia) =>\n\t\t\t\t\t\t\t\t\t\thandleMediaChange({ id: selectedMedia?.id ? selectedMedia.id : 0 })\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonRemove={handleMediaRemove}\n\t\t\t\t\t\t\t\t\tmediaType={mediaType}\n\t\t\t\t\t\t\t\t\tmultiple={multiple}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{displayFocalPicker && (\n\t\t\t\t\t\t\t\t\t<FocalPointPicker\n\t\t\t\t\t\t\t\t\t\tlabel=\"Focal Point Picker\"\n\t\t\t\t\t\t\t\t\t\turl={imageUrl}\n\t\t\t\t\t\t\t\t\t\tvalue={focalPoint}\n\t\t\t\t\t\t\t\t\t\tonChange={(newValues) => handleMediaChange({ focalPoint: newValues })}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\tlabel=\"Lazy Load\"\n\t\t\t\t\t\t\t\t\tonChange={() => handleMediaChange({ lazyLoad: !lazyLoad })}\n\t\t\t\t\t\t\t\t\tchecked={lazyLoad}\n\t\t\t\t\t\t\t\t\thelp=\"Disable this option if your image is in the first fold.\"\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\tlabel=\"Enable Responsive Images (srcset)\"\n\t\t\t\t\t\t\t\t\tonChange={() => handleMediaChange({ srcset: !srcset })}\n\t\t\t\t\t\t\t\t\tchecked={srcset}\n\t\t\t\t\t\t\t\t\thelp=\"Srcset is an HTML image attribute that specifies the list of images to use in different browser situations.\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ImageSizeControl\n\t\t\t\t\t\t\t\t\tisResizable={false}\n\t\t\t\t\t\t\t\t\tonChangeImage={(newSize) => handleMediaChange({ imageSize: newSize })}\n\t\t\t\t\t\t\t\t\tslug={imageSize}\n\t\t\t\t\t\t\t\t\timageSizeOptions={availableImageSizes}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{mediaType === 'video' && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{videoSource === 'external' ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Embed URL\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"url\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={videoUrl}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(newVideoUrl) => handleMediaChange({ videoUrl: newVideoUrl })}\n\t\t\t\t\t\t\t\t\t\t\thelp=\"Paste the URL from one of the provided oEmbed providers\"\n\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Autoplay Video\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={() => handleVideoColtrol({ autoplay: !autoplay })}\n\t\t\t\t\t\t\t\t\t\t\tchecked={autoplay}\n\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Mute Video\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={() => handleVideoColtrol({ isMuted: !isMuted })}\n\t\t\t\t\t\t\t\t\t\t\tchecked={isMuted}\n\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Show Controls\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={() => handleVideoColtrol({ showControls: !showControls })}\n\t\t\t\t\t\t\t\t\t\t\tchecked={showControls}\n\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t{embedPreview && (\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"ds-editor-embed-preview\">\n\t\t\t\t\t\t\t\t\t\t\t\t<label>Embed Preview</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"preview-wrap\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{ __html: embedPreview.html }}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Autoplay Video\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={() => handleVideoColtrol({ autoplay: !autoplay })}\n\t\t\t\t\t\t\t\t\t\t\tchecked={autoplay}\n\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Mute Video\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={() => handleVideoColtrol({ isMuted: !isMuted })}\n\t\t\t\t\t\t\t\t\t\t\tchecked={isMuted}\n\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Show Controls\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={() => handleVideoColtrol({ showControls: !showControls })}\n\t\t\t\t\t\t\t\t\t\t\tchecked={showControls}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{!posterId ? (\n\t\t\t\t\t\t\t\t\t\t\t<MediaUploadCheck>\n\t\t\t\t\t\t\t\t\t\t\t\t<MediaPlaceholder\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabels={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: `Upload Video Poster`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tinstructions: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonSelect={(selectedMedia) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleVideoColtrol({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tposterId: selectedMedia?.id ? selectedMedia.id : 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\taccept=\"image\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tallowedTypes={['image']} // there is a bug here, this doesn't work when changed, only on load\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</MediaUploadCheck>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"ds-editor-poster-preview\">\n\t\t\t\t\t\t\t\t\t\t\t\t<label>Video Preview</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<Video\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvideoSource={videoSource}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvideoUrl={videoUrl}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvideoControls={videoControls}\n\t\t\t\t\t\t\t\t\t\t\t\t\tisPreview\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <Image id={posterId} imageSize={posterSize} /> */}\n\t\t\t\t\t\t\t\t\t\t\t\t<ImageSizeControl\n\t\t\t\t\t\t\t\t\t\t\t\t\timageSizeHelp=\"Please select the poster image size\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tisResizable={false}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChangeImage={(newSize) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleVideoColtrol({ posterSize: newSize })\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tslug={posterSize}\n\t\t\t\t\t\t\t\t\t\t\t\t\timageSizeOptions={availableImageSizes}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<ToolbarGroup label=\"Poster\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ToolbarButton onClick={() => handleVideoColtrol({ posterId: 0 })}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tRemove Poster\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ToolbarButton>\n\t\t\t\t\t\t\t\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{videoSource === 'external' && mediaType === 'video' ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\tlabel=\"Embed URL\"\n\t\t\t\t\t\t\t\t\ttype=\"url\"\n\t\t\t\t\t\t\t\t\tvalue={videoUrl}\n\t\t\t\t\t\t\t\t\tonChange={(newVideoUrl) => handleMediaChange({ videoUrl: newVideoUrl })}\n\t\t\t\t\t\t\t\t\thelp=\"Paste the URL from one of the provided oEmbed providers\"\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t{embedPreview && (\n\t\t\t\t\t\t\t\t\t<div className=\"ds-editor-embed-preview\">\n\t\t\t\t\t\t\t\t\t\t<label>Embed Preview</label>\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"preview-wrap\"\n\t\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{ __html: embedPreview.html }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<MediaUploadCheck>\n\t\t\t\t\t\t\t\t<MediaPlaceholder\n\t\t\t\t\t\t\t\t\tlabels={{\n\t\t\t\t\t\t\t\t\t\ttitle: `Upload ${mediaType}`,\n\t\t\t\t\t\t\t\t\t\tinstructions: '',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonSelect={(selectedMedia) =>\n\t\t\t\t\t\t\t\t\t\thandleMediaChange({ id: selectedMedia?.id ? selectedMedia.id : 0 })\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\taccept={`${mediaType}/*`}\n\t\t\t\t\t\t\t\t\tmultiple={multiple}\n\t\t\t\t\t\t\t\t\tallowedTypes={[mediaType]} // there is a bug here, this doesn't work when changed, only on load\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</MediaUploadCheck>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</PanelBody>\n\t\t\t{showBlockControls && videoSource !== 'external' && (\n\t\t\t\t<BlockControls group=\"block\">\n\t\t\t\t\t<MediaToolbar\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t\tonSelect={(selectedMedia) =>\n\t\t\t\t\t\t\thandleMediaChange({ id: selectedMedia?.id ? selectedMedia.id : 0 })\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonRemove={handleMediaRemove}\n\t\t\t\t\t\tmediaType={mediaType}\n\t\t\t\t\t\tmultiple={multiple}\n\t\t\t\t\t/>\n\t\t\t\t</BlockControls>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\n// Set Default Props\nconst defaultMediaProps = {\n\tmedia: {\n\t\tid: 0,\n\t\tmediaType: 'image',\n\t\tlazyLoad: true,\n\t\tsrcset: true,\n\t\timageSize: 'full',\n\t\tvideoSource: 'internal',\n\t\tvideoUrl: '',\n\t\tfocalPoint: {\n\t\t\tx: 0.5,\n\t\t\ty: 0.5,\n\t\t},\n\t\tvideoControls: {\n\t\t\tautoplay: false,\n\t\t\tisMuted: true,\n\t\t\tshowControls: true,\n\t\t\tposterId: 0,\n\t\t\tposterSize: 'full',\n\t\t},\n\t},\n\tdisplayFocalPicker: false,\n\tallowMediaTypeSwitch: false,\n\tcontrolPanelLabel: 'Media Settings',\n\tmultiple: false,\n\tshowBlockControls: true,\n\tisBackground: false,\n\tisControl: true,\n};\n\n/**\n * MediaPicker is a functional component that conditionally renders\n * media panel content based on the `isControl` property in the merged props.\n *\n * Props are merged with default media properties and passed down to the\n * MediaPanelContent component.\n *\n * If `isControl` is true, MediaPanelContent is rendered directly.\n * If `isControl` is false, MediaPanelContent is wrapped within InspectorControls before rendering.\n *\n * @param {object} props - Properties passed to the component\n * @returns {JSX.Element} The rendered MediaPicker component\n */\nexport const MediaPicker = (props) => {\n\tconst mergedProps = { ...defaultMediaProps, ...props };\n\tconst { isControl } = mergedProps;\n\n\treturn (\n\t\t<>\n\t\t\t{isControl ? (\n\t\t\t\t<MediaPanelContent {...mergedProps} />\n\t\t\t) : (\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<MediaPanelContent {...mergedProps} />\n\t\t\t\t</InspectorControls>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nMediaPicker.propTypes = {\n\tmedia: PropTypes.object,\n\tdisplayFocalPicker: PropTypes.bool,\n\tallowMediaTypeSwitch: PropTypes.bool,\n\tcontrolPanelLabel: PropTypes.string,\n\tmultiple: PropTypes.bool,\n\tisControl: PropTypes.bool,\n\tshowBlockControls: PropTypes.bool,\n\tisBackground: PropTypes.bool,\n\tonSelect: PropTypes.func.isRequired,\n};\n","import { Spinner, Placeholder } from '@wordpress/components';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { getMedia } from '../../selectors';\n\n/**\n * Component that renders an image.\n *\n * @param {object} props - Properties passed to the component.\n * @param {number} props.id - The ID of the image.\n * @param {string} [props.imageSize='full'] - The size of the image to be displayed.\n * @param {object} [props.focalPoint={x: 0.5, y: 0.5}] - Focal point coordinates for the image.\n * @param {boolean} [props.isBackground=false] - Whether the image is used as a background.\n * @param {string} [props.className] - Additional CSS class names for the image.\n * @param {object} [props.rest] - Additional properties to be passed to the component.\n *\n * @returns {JSX.Element} The image component.\n */\nexport const Image = ({\n\tid,\n\timageSize = 'full',\n\tfocalPoint = {\n\t\tx: 0.5,\n\t\ty: 0.5,\n\t},\n\tisBackground = false,\n\tclassName = '',\n\t...rest\n}) => {\n\tconst hasImage = !!id;\n\n\t// @ts-ignore\n\tconst { mediaDetails, isResolvingMedia } = getMedia(id);\n\tconst imageUrl = mediaDetails?.media_details?.sizes?.[imageSize]?.source_url ?? mediaDetails?.source_url;\n\tconst altText = mediaDetails?.alt_text;\n\n\tif (isBackground && focalPoint && (focalPoint.x !== 0.5 || focalPoint.y !== 0.5)) {\n\t\tconst focalPointStyle = {\n\t\t\tobjectFit: 'cover',\n\t\t\tobjectPosition: `${focalPoint.x * 100}% ${focalPoint.y * 100}%`,\n\t\t};\n\n\t\trest.style = {\n\t\t\t...rest.style,\n\t\t\t...focalPointStyle,\n\t\t};\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{isBackground ? (\n\t\t\t\t<div className=\"ds-media is-background\">\n\t\t\t\t\t{!hasImage ? (\n\t\t\t\t\t\t<Placeholder\n\t\t\t\t\t\t\tclassName={classnames(className, 'ds-media__image', 'ds-media-placeholder')}\n\t\t\t\t\t\t\twithIllustration\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={imageUrl}\n\t\t\t\t\t\t\tclassName={classnames(className, 'ds-media__image')}\n\t\t\t\t\t\t\talt={altText}\n\t\t\t\t\t\t\t{...rest}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t{!hasImage ? (\n\t\t\t\t\t\t<Placeholder\n\t\t\t\t\t\t\tclassName={classnames(className, 'ds-media__image', 'ds-media-placeholder')}\n\t\t\t\t\t\t\twithIllustration\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : isResolvingMedia ? (\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<img src={imageUrl} className={classnames(className, 'ds-media__image')} alt={altText} />\n\t\t\t\t\t)}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nImage.propTypes = {\n\tid: PropTypes.number.isRequired,\n\timageSize: PropTypes.string,\n\tfocalPoint: PropTypes.shape({\n\t\tx: PropTypes.number,\n\t\ty: PropTypes.number,\n\t}),\n\tisBackground: PropTypes.bool,\n\tclassName: PropTypes.string,\n};\n","import { Spinner, Placeholder } from '@wordpress/components';\nimport PropTypes from 'prop-types';\nimport { useSelect } from '@wordpress/data';\nimport { getMedia, getPoster } from '../../selectors';\n\n// Define default video controls Object\nconst defaultVideoControls = {\n\tautoplay: false,\n\tisMuted: true,\n\tshowControls: true,\n\tposterId: 0,\n\tposterSize: 'full',\n};\n\n/**\n * Video component configuration object.\n *\n * @param {object} props                 The configuration options for the video component.\n * @param {number} props.id              The unique identifier of the video.\n * @param {string} props.videoSource     The source of the video ('internal' or 'external').\n * @param {string} props.videoUrl        The URL of the video if it's from an external source.\n * @param {object} props.videoControls   Configuration for the video controls.\n * @param {boolean} props.isBackground   Determines if the video is a background type.\n * @param {boolean} props.isPreview      Determines if the video is a preview.\n *\n * @returns {JSX.Element}                 The video component JSX elements.\n */\nexport const Video = ({\n\tid = 0,\n\tvideoSource = 'internal',\n\tvideoUrl = '',\n\tvideoControls = {},\n\tisBackground = false,\n\tisPreview = false,\n}) => {\n\tconst mergedVideoControls = {\n\t\t...defaultVideoControls,\n\t\t...videoControls,\n\t};\n\n\tconst { isMuted, showControls, posterId, posterSize } = mergedVideoControls;\n\n\tlet hasMedia = !!id;\n\n\t// @ts-ignore\n\tconst { mediaDetails, isResolvingMedia } = getMedia(id);\n\t// @ts-ignore\n\tconst { posterUrl } = getPoster(posterId, posterSize);\n\n\tconst { embedPreview } = useSelect(\n\t\t(select) => {\n\t\t\tconst { getEmbedPreview } = select('core');\n\n\t\t\tconst previewData = videoUrl.length ? getEmbedPreview(videoUrl) : false;\n\n\t\t\treturn {\n\t\t\t\tembedPreview: previewData,\n\t\t\t};\n\t\t},\n\t\t[videoUrl],\n\t);\n\n\tlet mediaUrl = videoUrl;\n\tlet mediaResolving = isResolvingMedia;\n\tlet mime_type = '';\n\n\tif (videoSource === 'internal' && mediaDetails) {\n\t\tmediaUrl = mediaDetails?.source_url ? mediaDetails.source_url : '';\n\t\tmime_type = mediaDetails?.mime_type ? mediaDetails.mime_type : '';\n\t\tmediaResolving = isResolvingMedia;\n\t}\n\n\tif (videoSource === 'external') {\n\t\tif (videoUrl) {\n\t\t\thasMedia = true;\n\t\t\tmediaResolving = false;\n\t\t}\n\t}\n\n\tconst additionalAtts = {\n\t\tposter: posterUrl,\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{isBackground ? (\n\t\t\t\t<div className=\"ds-media is-background\">\n\t\t\t\t\t{!hasMedia ? (\n\t\t\t\t\t\t<Placeholder className=\"ds-media__image ds-media-placeholder\" withIllustration />\n\t\t\t\t\t) : mediaResolving ? (\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{videoSource === 'internal' && (\n\t\t\t\t\t\t\t\t<div className=\"ds-media__video\">\n\t\t\t\t\t\t\t\t\t<video\n\t\t\t\t\t\t\t\t\t\tmuted={isMuted}\n\t\t\t\t\t\t\t\t\t\tcontrols={isPreview ? true : showControls}\n\t\t\t\t\t\t\t\t\t\tdisablePictureInPicture\n\t\t\t\t\t\t\t\t\t\tclassName=\"ds-media__video-element\"\n\t\t\t\t\t\t\t\t\t\t{...additionalAtts}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<source src={mediaUrl} type={mime_type} />\n\t\t\t\t\t\t\t\t\t</video>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{videoSource === 'external' && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{embedPreview && (\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"ds-media__video\"\n\t\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{ __html: embedPreview.html }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t{!hasMedia ? (\n\t\t\t\t\t\t<Placeholder className=\"ds-media__image ds-media-placeholder\" withIllustration />\n\t\t\t\t\t) : mediaResolving ? (\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{videoSource === 'internal' && (\n\t\t\t\t\t\t\t\t<div className=\"ds-media__video\">\n\t\t\t\t\t\t\t\t\t<video\n\t\t\t\t\t\t\t\t\t\tmuted={isMuted}\n\t\t\t\t\t\t\t\t\t\tcontrols={isPreview ? true : showControls}\n\t\t\t\t\t\t\t\t\t\tdisablePictureInPicture\n\t\t\t\t\t\t\t\t\t\tclassName=\"ds-media__video-element\"\n\t\t\t\t\t\t\t\t\t\t{...additionalAtts}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<source src={mediaUrl} type={mime_type} />\n\t\t\t\t\t\t\t\t\t</video>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{videoSource === 'external' && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{embedPreview && (\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"ds-media__video\"\n\t\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{ __html: embedPreview.html }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nVideo.propTypes = {\n\tid: PropTypes.number,\n\tisBackground: PropTypes.bool,\n\tvideoSource: PropTypes.string,\n\tvideoUrl: PropTypes.string,\n\tvideoControls: PropTypes.object,\n\tisPreview: PropTypes.bool,\n};\n","import PropTypes from 'prop-types';\nimport { Image, Video } from '../index';\n\n// Define Default Media Object\nconst defaultMedia = {\n\tid: 0,\n\tmediaType: 'image',\n\tlazyLoad: true,\n\tsrcset: true,\n\timageSize: 'full',\n\tvideoSource: 'internal',\n\tvideoUrl: '',\n\tfocalPoint: {\n\t\tx: 0.5,\n\t\ty: 0.5,\n\t},\n\tvideoControls: {\n\t\tautoplay: false,\n\t\tisMuted: true,\n\t\tshowControls: true,\n\t\tposterId: 0,\n\t\tposterSize: 'full',\n\t},\n};\n\n/**\n * MediaDisplay is a React component used to render either an image or a video, based on the media type provided\n * in the props. This component merges the provided media properties with default media settings.\n *\n * @param {object} props - Properties passed to the component.\n * @param {object} props.media - Media object containing properties for the media to be displayed.\n * @param {boolean} props.isBackground - Boolean flag to determine if the media should be rendered as background.\n * @param {object} props.rest - Rest of the props to be passed to the Image or Video components.\n * @returns {JSX.Element} A React element that conditionally renders an image or a video based on the media type.\n */\nexport const MediaDisplay = ({ media = {}, isBackground = false, ...rest }) => {\n\tconst mergedMedia = {\n\t\t...defaultMedia,\n\t\t...media,\n\t\tfocalPoint: { ...defaultMedia.focalPoint, ...media.focalPoint },\n\t\tvideoControls: { ...defaultMedia.videoControls, ...media.videoControls },\n\t};\n\n\tconst { id, mediaType, imageSize, videoSource, videoUrl, focalPoint, videoControls } = mergedMedia;\n\n\treturn (\n\t\t<>\n\t\t\t{mediaType === 'image' && (\n\t\t\t\t<Image id={id} imageSize={imageSize} focalPoint={focalPoint} isBackground={isBackground} {...rest} />\n\t\t\t)}\n\n\t\t\t{mediaType === 'video' && (\n\t\t\t\t<Video\n\t\t\t\t\tid={id}\n\t\t\t\t\tvideoSource={videoSource}\n\t\t\t\t\tvideoUrl={videoUrl}\n\t\t\t\t\tvideoControls={videoControls}\n\t\t\t\t\tisBackground={isBackground}\n\t\t\t\t\t{...rest}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nMediaDisplay.propTypes = {\n\tmedia: PropTypes.object.isRequired,\n\tisBackground: PropTypes.bool,\n};\n","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@wordpress/api-fetch\");","import PropTypes from 'prop-types';\n\n/**\n * Represents an icon component that renders an SVG icon.\n *\n * @param {object} props - The properties object.\n * @param {string} props.icon - The name of the icon to be rendered.\n * @param {number} [props.width=24] - The width of the icon in pixels.\n * @param {number} [props.height=24] - The height of the icon in pixels.\n * @returns {JSX.Element|null} The rendered SVG icon or null if no icon name is provided.\n */\nexport const ThemeIcon = ({ icon, width = 24, height = 24 }) => {\n\treturn (\n\t\t<>\n\t\t\t{icon && (\n\t\t\t\t<svg className={`icon icon-${icon}`} aria-hidden=\"true\" width={width} height={height} role=\"img\">\n\t\t\t\t\t<use href={`#sprite-${icon}`} />\n\t\t\t\t</svg>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nThemeIcon.propTypes = {\n\ticon: PropTypes.string.isRequired,\n\twidth: PropTypes.number,\n\theight: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { PanelBody } from '@wordpress/components';\nimport { useState, useEffect } from '@wordpress/element';\nimport apiFetch from '@wordpress/api-fetch';\nimport { ThemeIcon } from '../theme-icon';\n\n/**\n * IconPanelContent component renders a panel containing a list of icons.\n *\n * @param {object} props - The properties object.\n * @param {string} props.icon - The currently selected icon.\n * @param {number} props.width - The width of the icons to be displayed.\n * @param {number} props.height - The height of the icons to be displayed.\n * @param {string} props.panelTitle - The title of the panel.\n * @param {boolean} props.isExpanded - Whether the panel is expanded initially.\n * @param {Function} props.onSelect - Callback function that is called when an icon is selected.\n *\n * @returns {JSX.Element} The  component JSX elements. */\nconst IconPanelContent = ({ icon, width, height, panelTitle, isExpanded, onSelect }) => {\n\tconst [icons, setIcons] = useState([]);\n\tconst [selectedIcon, setSelectedIcon] = useState(icon);\n\n\tuseEffect(() => {\n\t\tconst fetchIcons = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await apiFetch({\n\t\t\t\t\tpath: '/ds/v1/icons/',\n\t\t\t\t});\n\t\t\t\tsetIcons(response?.icons || []);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log('Error fetching icons'); // eslint-disable-line\n\t\t\t\tconsole.warn(error); // eslint-disable-line\n\t\t\t}\n\t\t};\n\n\t\tfetchIcons();\n\t}, []);\n\n\t/**\n\t * Handles the selection of an icon.\n\t *\n\t * @param {string} selectedIcon - The identifier or name of the icon that has been selected.\n\t *\n\t */\n\tconst handleIconSelect = (selectedIcon) => {\n\t\tsetSelectedIcon(selectedIcon);\n\t\tonSelect(selectedIcon);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<PanelBody title={panelTitle} initialOpen={isExpanded}>\n\t\t\t\t<ul className=\"ds-editor-icon-list\">\n\t\t\t\t\t{icons.map((icon) => (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={icon}\n\t\t\t\t\t\t\tonClick={() => handleIconSelect(icon)}\n\t\t\t\t\t\t\tclassName={selectedIcon === icon ? 'selected' : ''}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ThemeIcon icon={icon} width={width} height={height} />\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</PanelBody>\n\t\t</>\n\t);\n};\n\n// Set Default Props\nconst defaultIconProps = {\n\ticon: '',\n\twidth: 24,\n\theight: 24,\n\tpanelTitle: 'Icon Picker',\n\tisExpanded: true,\n\tisControl: true,\n};\n\n/**\n * IconPicker Component\n *\n * A component used to render an icon picker panel. It supports both controlled and inspector control modes.\n *\n * @param {object} props - The properties object.\n * @param {string} [props.icon=''] - The initial icon to be selected.\n * @param {number} [props.width=24] - The width of the icon display.\n * @param {number} [props.height=24] - The height of the icon display.\n * @param {boolean} [props.isControl=true] - Determines if the component is in controlled mode.\n * @param {string} [props.panelTitle='Icon Picker'] - The title of the icon picker panel.\n * @param {boolean} [props.isExpanded=true] - Determines if the panel is expanded.\n * @param {Function} props.onSelect - Callback function to handle the selection of an icon.\n *\n * @returns {JSX.Element} The rendered IconPicker component.\n */\nexport const IconPicker = ({\n\ticon = '',\n\twidth = 24,\n\theight = 24,\n\tpanelTitle = 'Icon Picker',\n\tisExpanded = true,\n\tisControl = true,\n\tonSelect,\n}) => {\n\tconst mergedProps = {\n\t\t...defaultIconProps,\n\t\ticon,\n\t\twidth,\n\t\theight,\n\t\tpanelTitle,\n\t\tisExpanded,\n\t\tisControl,\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{isControl ? (\n\t\t\t\t<IconPanelContent onSelect={onSelect} {...mergedProps} />\n\t\t\t) : (\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<IconPanelContent onSelect={onSelect} {...mergedProps} />\n\t\t\t\t</InspectorControls>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nIconPicker.propTypes = {\n\ticon: PropTypes.string,\n\twidth: PropTypes.number,\n\theight: PropTypes.number,\n\tpanelTitle: PropTypes.string,\n\tisControl: PropTypes.bool,\n\tisExpanded: PropTypes.bool,\n\tonSelect: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\n// Set Defaults\nconst defaultOverlay = {\n\thasOverlay: false,\n\toverlayColor: {},\n\toverlayGradient: {},\n\toverlayOpacity: 25,\n\toverlayType: 'color',\n};\n\n/**\n * OverlayDisplay is a React functional component that renders a background overlay\n * with customizable properties such as type, color, gradient, and opacity.\n *\n * @param {object} props - The properties object to configure the overlay display.\n * @param {object} [props.overlay={}] - The overlay configuration object.\n * @returns {JSX.Element} - A JSX element representing the background overlay.\n */\nexport const OverlayDisplay = ({ overlay = {} }) => {\n\tconst mergedOverlay = {\n\t\t...defaultOverlay,\n\t\t...overlay,\n\t};\n\tconst { hasOverlay, overlayType, overlayColor, overlayGradient, overlayOpacity } = mergedOverlay;\n\n\tconst divStyle = {\n\t\topacity: overlayOpacity / 100,\n\t};\n\n\tconst styles = {\n\t\tstyle: {\n\t\t\t...divStyle,\n\t\t},\n\t};\n\n\tlet css_class_name = '';\n\n\tif (overlayType === 'color' && overlayColor) {\n\t\tconst colorSlug = overlayColor?.slug ? overlayColor.slug : '';\n\t\tif (colorSlug) {\n\t\t\tcss_class_name = `has-${colorSlug}-background-color`;\n\t\t}\n\t}\n\n\tif (overlayType === 'gradient' && overlayGradient) {\n\t\tconst gradientSlug = overlayGradient?.slug ? overlayGradient.slug : '';\n\t\tif (gradientSlug) {\n\t\t\tcss_class_name = `has-${gradientSlug}-gradient-background`;\n\t\t}\n\t}\n\n\treturn <> {hasOverlay && <div className={`background-overlay ${css_class_name}`} {...styles} />}</>;\n};\n\nOverlayDisplay.propTypes = {\n\toverlay: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport {\n\tColorPalette,\n\tGradientPicker,\n\tPanelBody,\n\tRangeControl,\n\t__experimentalToggleGroupControl as ToggleGroupControl,\n\t__experimentalToggleGroupControlOption as ToggleGroupControlOption,\n\tToggleControl,\n} from '@wordpress/components';\nimport { getEditorSettings } from '../../selectors';\n\n/**\n * OverlayPanelContent component is responsible for rendering and managing the\n * overlay settings panel within a UI, allowing users to configure overlay properties\n * such as enabling/disabling the overlay, setting overlay opacity, choosing between\n * color and gradient overlay types, and selecting specific colors or gradients.\n *\n * @param {object} props - The properties object.\n * @param {object} props.overlay - The overlay configuration object.\n * @param {Function} props.onSelect - Callback function to handle overlay changes.\n */\nconst OverlayPanelContent = ({ overlay, onSelect }) => {\n\t// @ts-ignore\n\tconst { hasOverlay, overlayType, overlayColor, overlayGradient, overlayOpacity } = overlay;\n\t// @ts-ignore\n\tconst { colors, gradients } = getEditorSettings();\n\n\tconst handleOverlayChange = (value) => {\n\t\tconst newOverlayData = { ...overlay, ...value };\n\t\tonSelect(newOverlayData);\n\t};\n\n\tconst handleColorSelect = (colorHex) => {\n\t\tconst matchingItem = colors.find((item) => item.color === colorHex);\n\n\t\tif (matchingItem) {\n\t\t\thandleOverlayChange({ overlayColor: matchingItem });\n\t\t} else {\n\t\t\thandleOverlayChange({ overlayColor: {} });\n\t\t}\n\t};\n\n\tconst handleGradientSelect = (gradient) => {\n\t\tconst matchingItem = gradients.find((item) => item?.gradient === gradient);\n\n\t\tif (matchingItem) {\n\t\t\thandleOverlayChange({ overlayGradient: matchingItem });\n\t\t} else {\n\t\t\thandleOverlayChange({ overlayGradient: {} });\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<PanelBody title=\"Background Overlay\">\n\t\t\t\t<ToggleControl\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\tlabel=\"Has Overlay\"\n\t\t\t\t\tonChange={() => handleOverlayChange({ hasOverlay: !hasOverlay })}\n\t\t\t\t\tchecked={hasOverlay}\n\t\t\t\t/>\n\t\t\t</PanelBody>\n\n\t\t\t{hasOverlay && (\n\t\t\t\t<PanelBody title=\"Overlay Settings\">\n\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t__nextHasNoMargin\n\t\t\t\t\t\tlabel=\"Overlay Opacity\"\n\t\t\t\t\t\tvalue={overlayOpacity}\n\t\t\t\t\t\tonChange={(opacity) => handleOverlayChange({ overlayOpacity: opacity })}\n\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\tmax={100}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<ToggleGroupControl\n\t\t\t\t\t\tlabel=\"Overlay Type\"\n\t\t\t\t\t\tvalue={overlayType}\n\t\t\t\t\t\tisBlock\n\t\t\t\t\t\tonChange={(value) => handleOverlayChange({ overlayType: value })}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ToggleGroupControlOption value=\"color\" label=\"Color\" />\n\t\t\t\t\t\t<ToggleGroupControlOption value=\"gradient\" label=\"Gradient\" />\n\t\t\t\t\t</ToggleGroupControl>\n\n\t\t\t\t\t{overlayType === 'color' && (\n\t\t\t\t\t\t<ColorPalette\n\t\t\t\t\t\t\tcolors={colors}\n\t\t\t\t\t\t\tvalue={overlayColor?.color}\n\t\t\t\t\t\t\tonChange={(color) => handleColorSelect(color)}\n\t\t\t\t\t\t\tdisableCustomColors\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{overlayType === 'gradient' && (\n\t\t\t\t\t\t<GradientPicker\n\t\t\t\t\t\t\t__nextHasNoMargin\n\t\t\t\t\t\t\tvalue={overlayGradient?.gradient ? overlayGradient.gradient : ''}\n\t\t\t\t\t\t\tgradients={gradients}\n\t\t\t\t\t\t\tonChange={(currentGradient) => handleGradientSelect(currentGradient)}\n\t\t\t\t\t\t\tdisableCustomGradients\n\t\t\t\t\t\t\tasButtons\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</PanelBody>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\n// Set overlay defaults\nconst defaultOverlay = {\n\thasOverlay: false,\n\toverlayColor: {},\n\toverlayGradient: {},\n\toverlayOpacity: 25,\n\toverlayType: 'color',\n};\n\n/**\n * OverlayPicker Component\n *\n * This component renders an overlay selection panel. Depending on the value\n * of the `isControl` prop, it either wraps the content in an\n * `InspectorControls` component or not.\n *\n * @param {object} props - The properties object.\n * @param {object} [props.overlay={}] - Custom overlay configuration.\n * @param {boolean} [props.isControl=true] - Determines if the content should be\n * wrapped in an `InspectorControls` component.\n * @param {Function} props.onSelect - Callback function invoked when an overlay item is selected.\n */\nexport const OverlayPicker = ({ overlay = {}, isControl = true, onSelect }) => {\n\tconst mergedOverlay = {\n\t\t...defaultOverlay,\n\t\t...overlay,\n\t};\n\treturn (\n\t\t<>\n\t\t\t{isControl ? (\n\t\t\t\t<OverlayPanelContent overlay={mergedOverlay} onSelect={onSelect} />\n\t\t\t) : (\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<OverlayPanelContent overlay={mergedOverlay} onSelect={onSelect} />\n\t\t\t\t</InspectorControls>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nOverlayPicker.propTypes = {\n\toverlay: PropTypes.object,\n\tonSelect: PropTypes.func.isRequired,\n\tisControl: PropTypes.bool,\n};\n","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"uuid\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@wordpress/icons\");","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuid } from 'uuid';\nimport { useEffect } from '@wordpress/element';\nimport { BlockControls } from '@wordpress/block-editor';\nimport { Button, ToolbarButton } from '@wordpress/components';\nimport { plusCircle, close } from '@wordpress/icons';\n\n/**\n * The Repeater component dynamically manages a list of items, allowing the addition and removal of items. Provides callbacks for handling changes to the list.\n *\n * @param {object} props - The component properties.\n * @param {Function} props.children - A render function for the repeater items. Receives item data, remove component, set item callback, remove item callback, item id, and key as arguments.\n * @param {Function} props.onChange - A callback function to handle changes to the value array.\n * @param {Array} [props.value=[]] - The current value array representing the list of items.\n * @param {Array} [props.defaultValue=[]] - The default value array that provides the structure for new items.\n * @param {string} [props.addButtonLabel='Add Item'] - Label for the add item button.\n * @param {string} [props.removeButtonLabel='Remove Item'] - Label for the remove item button.\n * @param {number} [props.minItems=1] - The minimum number of items that must be maintained in the list.\n * @param {number} [props.maxItems] - The maximum number of items allowed in the list.\n * @param {number} [props.initialItems=1] - The number of items to be initially added to the list.\n * @param {string} [props.removeLayout='vertical'] - The layout for the remove button (e.g., 'vertical', 'horizontal').\n * @param {boolean} [props.showBlockControls=true] - If true, displays block controls for adding an item.\n */\nexport const Repeater = ({\n\tchildren,\n\tonChange,\n\tvalue = [],\n\tdefaultValue = [],\n\taddButtonLabel = 'Add Item',\n\tremoveButtonLabel = 'Remove Item',\n\tminItems = 1,\n\tmaxItems,\n\tinitialItems = 1,\n\tremoveLayout = 'vertical',\n\tshowBlockControls = true,\n}) => {\n\t/**\n\t * Adds a specified number of initial items based on the default value.\n\t *\n\t * @param {number} count - The number of initial items to add.\n\t * @return {void} This method does not return a value.\n\t */\n\tfunction addInitialItems(count) {\n\t\tconst defaultValueCopy = Array.isArray(defaultValue) ? [...defaultValue] : [];\n\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tconst newItem = { ...defaultValueCopy[0], id: uuid() };\n\t\t\tdefaultValueCopy.push(newItem);\n\t\t}\n\n\t\tonChange(defaultValueCopy);\n\t}\n\n\tuseEffect(() => {\n\t\tif (initialItems && initialItems > 0 && value.length === 0) {\n\t\t\tlet numberofItemsToAdd = initialItems;\n\t\t\tif (maxItems && initialItems > maxItems) {\n\t\t\t\tnumberofItemsToAdd = maxItems;\n\t\t\t}\n\n\t\t\tif (minItems !== 0) {\n\t\t\t\taddInitialItems(numberofItemsToAdd);\n\t\t\t}\n\t\t}\n\t}, [initialItems]); // eslint-disable-line\n\n\t/**\n\t * Add Item\n\t */\n\tfunction addItem() {\n\t\tif (maxItems && value.length >= maxItems) return; // Check if maxItems limit is reached\n\n\t\t// Check if the default value is an array of objects\n\t\tconst defaultValueCopy =\n\t\t\tArray.isArray(defaultValue) && defaultValue.length > 0\n\t\t\t\t? [defaultValue[0]] // Take only the first object if it's an array\n\t\t\t\t: [];\n\n\t\tif (!defaultValue.length) {\n\t\t\tdefaultValueCopy.push([]);\n\t\t}\n\n\t\tdefaultValueCopy[0].id = uuid(); // Generate id for the default item\n\n\t\tonChange([...value, ...defaultValueCopy]);\n\t}\n\n\t/**\n\t * Sets a new value at the specified index in the value array and triggers the onChange callback.\n\t *\n\t * @param {object | any} newValue - The new value to be set at the specified index. Can be an object or any other type.\n\t * @param {number} index - The index at which the new value should be set.\n\t * @return {void} This function does not return a value.\n\t */\n\tfunction setItem(newValue, index) {\n\t\tconst valueCopy = JSON.parse(JSON.stringify(value));\n\n\t\tif (typeof newValue === 'object' && newValue !== null) {\n\t\t\tvalueCopy[index] = { ...valueCopy[index], ...newValue };\n\t\t} else {\n\t\t\tvalueCopy[index] = newValue;\n\t\t}\n\n\t\tonChange(valueCopy);\n\t}\n\n\t/**\n\t * Removes an item from a list at the specified index.\n\t *\n\t * @param {number} index - The position of the item to be removed.\n\t * @return {undefined} This method does not return a value.\n\t */\n\tfunction removeItem(index) {\n\t\tconst valueCopy = JSON.parse(JSON.stringify(value)).filter((item, innerIndex) => index !== innerIndex);\n\t\tonChange(valueCopy);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{showBlockControls && (\n\t\t\t\t<BlockControls group=\"block\">\n\t\t\t\t\t<ToolbarButton label={addButtonLabel} icon={plusCircle} onClick={() => addItem()} />\n\t\t\t\t</BlockControls>\n\t\t\t)}\n\n\t\t\t{value && value.length\n\t\t\t\t? value.map((item, key) => {\n\t\t\t\t\t\tconst removeComponent =\n\t\t\t\t\t\t\tminItems !== value.length ? (\n\t\t\t\t\t\t\t\t<div className={`ds-repeater-remove-item ${removeLayout}`}>\n\t\t\t\t\t\t\t\t\t<Button icon={close} label={removeButtonLabel} onClick={() => removeItem(key)} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : null;\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t// eslint-ignore-next-line\n\t\t\t\t\t\t\t<React.Fragment key={item?.uuid || key}>\n\t\t\t\t\t\t\t\t{children(\n\t\t\t\t\t\t\t\t\titem,\n\t\t\t\t\t\t\t\t\tremoveComponent,\n\t\t\t\t\t\t\t\t\t(val) => setItem(val, key),\n\t\t\t\t\t\t\t\t\t() => removeItem(key),\n\t\t\t\t\t\t\t\t\titem.id,\n\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t: null}\n\n\t\t\t{(!maxItems || value.length < maxItems) && (\n\t\t\t\t<div className=\"ds-repeater-add-item\">\n\t\t\t\t\t<Button variant=\"link\" onClick={() => addItem()} icon={plusCircle} iconPosition=\"right\">\n\t\t\t\t\t\t{addButtonLabel}\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nRepeater.propTypes = {\n\tchildren: PropTypes.func.isRequired,\n\tonChange: PropTypes.func.isRequired,\n\tvalue: PropTypes.array.isRequired,\n\tdefaultValue: PropTypes.array,\n\taddButtonLabel: PropTypes.string,\n\tremoveButtonLabel: PropTypes.string,\n\tminItems: PropTypes.number,\n\tmaxItems: PropTypes.number,\n\tinitialItems: PropTypes.number,\n\tremoveLayout: PropTypes.string,\n\tshowBlockControls: PropTypes.bool,\n};\n","/**\n * External dependencies\n */\nimport PropTypes from 'prop-types';\n\n/**\n * WordPress dependencies\n */\nimport { useState, useEffect, useRef } from '@wordpress/element';\nimport { Popover, Icon, Tooltip } from '@wordpress/components';\nimport { __experimentalLinkControl as LinkControl, RichText } from '@wordpress/block-editor';\n\n/**\n * Internal Dependencies\n */\nimport { getOutsideClickRef } from '../../selectors';\n\n/**\n * Given the Link block's type attribute, return the query params to give to\n * /wp/v2/search.\n *\n * @param {string} type Link block's type attribute.\n * @param {string} kind Link block's entity of kind (post-type|taxonomy)\n * @returns {{ type?: string, subtype?: string }} Search query params.\n */\nfunction getSuggestionsQuery(type, kind) {\n\tswitch (type) {\n\t\tcase 'post':\n\t\tcase 'page':\n\t\t\treturn { type: 'post', subtype: type };\n\t\tcase 'category':\n\t\t\treturn { type: 'term', subtype: 'category' };\n\t\tcase 'tag':\n\t\t\treturn { type: 'term', subtype: 'post_tag' };\n\t\tcase 'post_format':\n\t\t\treturn { type: 'post-format' };\n\t}\n\n\tswitch (kind) {\n\t\tcase 'taxonomy':\n\t\t\treturn { type: 'term', subtype: type };\n\t\tcase 'post-type':\n\t\t\treturn { type: 'post', subtype: type };\n\t\tdefault:\n\t\t\treturn {};\n\t}\n}\n\n/**\n * A React functional component to handle link creation and editing with rich text capabilities.\n *\n * @param {object} props The properties passed to this component.\n * @param {string} props.value The displayed text of the link.\n * @param {string} props.url The URL to which the link points.\n * @param {string} props.type The type of the link for categorization or custom handling.\n * @param {boolean} props.opensInNewTab Flag to determine if the link should open in a new tab.\n * @param {string} props.kind The kind of link used for suggestion filtering.\n * @param {string} props.placeholder Placeholder text for the link input.\n * @param {boolean} props.isControl Flag to determine if the link is a control element.\n * @param {string} props.controlLabel The label description for the control link type.\n * @param {string} props.className Additional class names for custom styling.\n * @param {Function} props.onLinkChange Callback function to handle link changes.\n * @param {Function} props.onTextChange Callback function to handle text changes.\n * @param {Function} props.onLinkRemove Callback function to handle link removal.\n * @param {object} props.rest Additional properties to be passed down to child components.\n *\n * @returns {JSX.Element} The rendered React component for creating and editing a link.\n */\nconst Link = ({\n\tvalue = '',\n\turl = '',\n\ttype = '',\n\topensInNewTab = false,\n\tkind = '',\n\tplaceholder = 'Link text...',\n\tisControl = false,\n\tcontrolLabel = 'Link Text',\n\tclassName = '',\n\tonLinkChange,\n\tonTextChange,\n\tonLinkRemove,\n\t...rest\n}) => {\n\tconst [isPopoverVisible, setIsPopoverVisible] = useState(false);\n\tconst [isValidLink, setIsValidLink] = useState(false);\n\tconst openPopover = () => setIsPopoverVisible(true);\n\tconst closePopover = () => setIsPopoverVisible(false);\n\n\tconst linkRef = useRef();\n\tconst popoverRef = getOutsideClickRef(closePopover);\n\n\tconst link = {\n\t\turl,\n\t\topensInNewTab,\n\t\ttitle: value, // don't allow HTML to display inside the <LinkControl>\n\t};\n\n\t/**\n\t * Check if the URL and Value are set. If yes, then the component is valid.\n\t * Otherwise, we will output a visual reminder to the editor that one of the\n\t * two needs to be set.\n\t */\n\tuseEffect(() => {\n\t\tsetIsValidLink(!!url && !!value);\n\t}, [url, value]);\n\n\treturn (\n\t\t<>\n\t\t\t{isControl && <p className=\"ds-link__label-desc\">{controlLabel}</p>}\n\t\t\t<RichText\n\t\t\t\ttagName=\"a\"\n\t\t\t\tclassName={`ds-link__label ${className} ${isControl ? 'contol-label' : ''}`}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={onTextChange}\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\t__unstablePastePlainText\n\t\t\t\tallowedFormats={[]}\n\t\t\t\tonClick={openPopover}\n\t\t\t\tref={linkRef}\n\t\t\t\t{...rest}\n\t\t\t/>\n\n\t\t\t{!isValidLink && (\n\t\t\t\t<Tooltip text=\"URL or Text has not been set\">\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<Icon icon=\"warning\" />\n\t\t\t\t\t</span>\n\t\t\t\t</Tooltip>\n\t\t\t)}\n\n\t\t\t{isPopoverVisible && (\n\t\t\t\t<Popover anchor={linkRef.current} ref={popoverRef} focusOnMount={false}>\n\t\t\t\t\t<LinkControl\n\t\t\t\t\t\thasTextControl\n\t\t\t\t\t\tvalue={link}\n\t\t\t\t\t\tshowInitialSuggestions\n\t\t\t\t\t\tnoDirectEntry={!!type}\n\t\t\t\t\t\tnoURLSuggestion={!!type}\n\t\t\t\t\t\tsuggestionsQuery={getSuggestionsQuery(type, kind)}\n\t\t\t\t\t\tonChange={onLinkChange}\n\t\t\t\t\t\tonRemove={onLinkRemove}\n\t\t\t\t\t\tsettings={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: 'opensInNewTab',\n\t\t\t\t\t\t\t\ttitle: 'Open in new tab',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</Popover>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nLink.propTypes = {\n\tvalue: PropTypes.string,\n\turl: PropTypes.string,\n\tonLinkChange: PropTypes.func.isRequired,\n\tonLinkRemove: PropTypes.func,\n\tonTextChange: PropTypes.func.isRequired,\n\topensInNewTab: PropTypes.bool.isRequired,\n\ttype: PropTypes.string,\n\tkind: PropTypes.string,\n\tclassName: PropTypes.string,\n\tplaceholder: PropTypes.string,\n\tisControl: PropTypes.bool,\n\tcontrolLabel: PropTypes.string,\n};\n\nexport { Link };\n","/**\n * External dependencies\n */\nimport PropTypes from 'prop-types';\n\n/**\n * WordPress dependencies\n */\nimport { useState, useEffect, useRef } from '@wordpress/element';\nimport { Popover, Icon, Tooltip } from '@wordpress/components';\nimport { __experimentalLinkControl as LinkControl } from '@wordpress/block-editor';\n\n/**\n * Internal Dependencies\n */\nimport { getOutsideClickRef } from '../../selectors';\n\n/**\n * Given the Link block's type attribute, return the query params to give to\n * /wp/v2/search.\n *\n * @param {string} type Link block's type attribute.\n * @param {string} kind Link block's entity of kind (post-type|taxonomy)\n * @returns {{ type?: string, subtype?: string }} Search query params.\n */\nfunction getSuggestionsQuery(type, kind) {\n\tswitch (type) {\n\t\tcase 'post':\n\t\tcase 'page':\n\t\t\treturn { type: 'post', subtype: type };\n\t\tcase 'category':\n\t\t\treturn { type: 'term', subtype: 'category' };\n\t\tcase 'tag':\n\t\t\treturn { type: 'term', subtype: 'post_tag' };\n\t\tcase 'post_format':\n\t\t\treturn { type: 'post-format' };\n\t}\n\n\tswitch (kind) {\n\t\tcase 'taxonomy':\n\t\t\treturn { type: 'term', subtype: type };\n\t\tcase 'post-type':\n\t\t\treturn { type: 'post', subtype: type };\n\t\tdefault:\n\t\t\treturn {};\n\t}\n}\n\n/**\n * Component wrapper for a link content block.\n *\n * @param {object} props - The properties object.\n * @param {string} props.linkText - The text displayed for the link.\n * @param {string} props.url - The URL that the link points to.\n * @param {boolean} props.opensInNewTab - Specifies if the link should open in a new tab.\n * @param {string} props.type - The type of link.\n * @param {string} props.kind - The kind of link.\n * @param {string} props.tagName - The tag name to use for the wrapper element.\n * @param {boolean} props.showLinkControl - Flag to show/hide link controls.\n * @param {Function} props.onLinkChange - Callback function to handle link changes.\n * @param {Function} props.onLinkRemove - Callback function to handle link removal.\n * @param {React.ReactNode} props.children - Child components or elements.\n * @param {object} [props.rest] - Additional props passed to the component.\n */\nexport const LinkWrap = ({\n\tlinkText = '',\n\turl = '',\n\topensInNewTab = false,\n\ttype = '',\n\tkind = '',\n\ttagName = 'span',\n\tshowLinkControl = true,\n\tonLinkChange,\n\tonLinkRemove,\n\tchildren,\n\t...rest\n}) => {\n\tconst [isPopoverVisible, setIsPopoverVisible] = useState(false);\n\tconst [isValidLink, setIsValidLink] = useState(false);\n\tconst openPopover = () => {\n\t\tif (showLinkControl) {\n\t\t\tsetIsPopoverVisible(true);\n\t\t}\n\t};\n\tconst closePopover = () => setIsPopoverVisible(false);\n\n\tconst linkRef = useRef();\n\tconst popoverRef = getOutsideClickRef(closePopover);\n\n\tconst link = {\n\t\turl,\n\t\topensInNewTab,\n\t\ttitle: linkText,\n\t};\n\n\tconst TagName = `${tagName}`;\n\n\t/**\n\t * Check if the URL is set. If yes, then the component is valid.\n\t * Otherwise, we will output a visual reminder\n\t */\n\tuseEffect(() => {\n\t\tsetIsValidLink(!!url);\n\t}, [url]);\n\n\treturn (\n\t\t<>\n\t\t\t<TagName onClick={openPopover} ref={linkRef} {...rest}>\n\t\t\t\t{children}\n\n\t\t\t\t{!isValidLink && (\n\t\t\t\t\t<Tooltip text=\"URL has not been set\">\n\t\t\t\t\t\t<span className=\"invalid-link\">\n\t\t\t\t\t\t\t<Icon icon=\"warning\" />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t)}\n\t\t\t</TagName>\n\n\t\t\t{isPopoverVisible && (\n\t\t\t\t<Popover anchor={linkRef.current} ref={popoverRef} focusOnMount={false}>\n\t\t\t\t\t<LinkControl\n\t\t\t\t\t\thasTextControl\n\t\t\t\t\t\tvalue={link}\n\t\t\t\t\t\tshowInitialSuggestions\n\t\t\t\t\t\tnoDirectEntry={!!type}\n\t\t\t\t\t\tnoURLSuggestion={!!type}\n\t\t\t\t\t\tsuggestionsQuery={getSuggestionsQuery(type, kind)}\n\t\t\t\t\t\tonChange={onLinkChange}\n\t\t\t\t\t\tonRemove={onLinkRemove}\n\t\t\t\t\t\tsettings={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: 'opensInNewTab',\n\t\t\t\t\t\t\t\ttitle: 'Open in new tab',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</Popover>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nLinkWrap.propTypes = {\n\tlinkText: PropTypes.string,\n\turl: PropTypes.string,\n\topensInNewTab: PropTypes.bool.isRequired,\n\ttype: PropTypes.string,\n\tkind: PropTypes.string,\n\ttagName: PropTypes.string,\n\tshowLinkControl: PropTypes.bool,\n\tonLinkChange: PropTypes.func.isRequired,\n\tonLinkRemove: PropTypes.func,\n};\n","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@dnd-kit/core\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@dnd-kit/sortable\");","import { useMemo, useLayoutEffect, useEffect, useRef, useCallback } from 'react';\n\nfunction useCombinedRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n\n  return useMemo(() => node => {\n    refs.forEach(ref => ref(node));\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  refs);\n}\n\n// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\nconst canUseDOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\nfunction isWindow(element) {\n  const elementString = Object.prototype.toString.call(element);\n  return elementString === '[object Window]' || // In Electron context the Window object serializes to [object global]\n  elementString === '[object global]';\n}\n\nfunction isNode(node) {\n  return 'nodeType' in node;\n}\n\nfunction getWindow(target) {\n  var _target$ownerDocument, _target$ownerDocument2;\n\n  if (!target) {\n    return window;\n  }\n\n  if (isWindow(target)) {\n    return target;\n  }\n\n  if (!isNode(target)) {\n    return window;\n  }\n\n  return (_target$ownerDocument = (_target$ownerDocument2 = target.ownerDocument) == null ? void 0 : _target$ownerDocument2.defaultView) != null ? _target$ownerDocument : window;\n}\n\nfunction isDocument(node) {\n  const {\n    Document\n  } = getWindow(node);\n  return node instanceof Document;\n}\n\nfunction isHTMLElement(node) {\n  if (isWindow(node)) {\n    return false;\n  }\n\n  return node instanceof getWindow(node).HTMLElement;\n}\n\nfunction isSVGElement(node) {\n  return node instanceof getWindow(node).SVGElement;\n}\n\nfunction getOwnerDocument(target) {\n  if (!target) {\n    return document;\n  }\n\n  if (isWindow(target)) {\n    return target.document;\n  }\n\n  if (!isNode(target)) {\n    return document;\n  }\n\n  if (isDocument(target)) {\n    return target;\n  }\n\n  if (isHTMLElement(target) || isSVGElement(target)) {\n    return target.ownerDocument;\n  }\n\n  return document;\n}\n\n/**\r\n * A hook that resolves to useEffect on the server and useLayoutEffect on the client\r\n * @param callback {function} Callback function that is invoked when the dependencies of the hook change\r\n */\n\nconst useIsomorphicLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;\n\nfunction useEvent(handler) {\n  const handlerRef = useRef(handler);\n  useIsomorphicLayoutEffect(() => {\n    handlerRef.current = handler;\n  });\n  return useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return handlerRef.current == null ? void 0 : handlerRef.current(...args);\n  }, []);\n}\n\nfunction useInterval() {\n  const intervalRef = useRef(null);\n  const set = useCallback((listener, duration) => {\n    intervalRef.current = setInterval(listener, duration);\n  }, []);\n  const clear = useCallback(() => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n  }, []);\n  return [set, clear];\n}\n\nfunction useLatestValue(value, dependencies) {\n  if (dependencies === void 0) {\n    dependencies = [value];\n  }\n\n  const valueRef = useRef(value);\n  useIsomorphicLayoutEffect(() => {\n    if (valueRef.current !== value) {\n      valueRef.current = value;\n    }\n  }, dependencies);\n  return valueRef;\n}\n\nfunction useLazyMemo(callback, dependencies) {\n  const valueRef = useRef();\n  return useMemo(() => {\n    const newValue = callback(valueRef.current);\n    valueRef.current = newValue;\n    return newValue;\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [...dependencies]);\n}\n\nfunction useNodeRef(onChange) {\n  const onChangeHandler = useEvent(onChange);\n  const node = useRef(null);\n  const setNodeRef = useCallback(element => {\n    if (element !== node.current) {\n      onChangeHandler == null ? void 0 : onChangeHandler(element, node.current);\n    }\n\n    node.current = element;\n  }, //eslint-disable-next-line\n  []);\n  return [node, setNodeRef];\n}\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n\nlet ids = {};\nfunction useUniqueId(prefix, value) {\n  return useMemo(() => {\n    if (value) {\n      return value;\n    }\n\n    const id = ids[prefix] == null ? 0 : ids[prefix] + 1;\n    ids[prefix] = id;\n    return prefix + \"-\" + id;\n  }, [prefix, value]);\n}\n\nfunction createAdjustmentFn(modifier) {\n  return function (object) {\n    for (var _len = arguments.length, adjustments = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      adjustments[_key - 1] = arguments[_key];\n    }\n\n    return adjustments.reduce((accumulator, adjustment) => {\n      const entries = Object.entries(adjustment);\n\n      for (const [key, valueAdjustment] of entries) {\n        const value = accumulator[key];\n\n        if (value != null) {\n          accumulator[key] = value + modifier * valueAdjustment;\n        }\n      }\n\n      return accumulator;\n    }, { ...object\n    });\n  };\n}\n\nconst add = /*#__PURE__*/createAdjustmentFn(1);\nconst subtract = /*#__PURE__*/createAdjustmentFn(-1);\n\nfunction hasViewportRelativeCoordinates(event) {\n  return 'clientX' in event && 'clientY' in event;\n}\n\nfunction isKeyboardEvent(event) {\n  if (!event) {\n    return false;\n  }\n\n  const {\n    KeyboardEvent\n  } = getWindow(event.target);\n  return KeyboardEvent && event instanceof KeyboardEvent;\n}\n\nfunction isTouchEvent(event) {\n  if (!event) {\n    return false;\n  }\n\n  const {\n    TouchEvent\n  } = getWindow(event.target);\n  return TouchEvent && event instanceof TouchEvent;\n}\n\n/**\r\n * Returns the normalized x and y coordinates for mouse and touch events.\r\n */\n\nfunction getEventCoordinates(event) {\n  if (isTouchEvent(event)) {\n    if (event.touches && event.touches.length) {\n      const {\n        clientX: x,\n        clientY: y\n      } = event.touches[0];\n      return {\n        x,\n        y\n      };\n    } else if (event.changedTouches && event.changedTouches.length) {\n      const {\n        clientX: x,\n        clientY: y\n      } = event.changedTouches[0];\n      return {\n        x,\n        y\n      };\n    }\n  }\n\n  if (hasViewportRelativeCoordinates(event)) {\n    return {\n      x: event.clientX,\n      y: event.clientY\n    };\n  }\n\n  return null;\n}\n\nconst CSS = /*#__PURE__*/Object.freeze({\n  Translate: {\n    toString(transform) {\n      if (!transform) {\n        return;\n      }\n\n      const {\n        x,\n        y\n      } = transform;\n      return \"translate3d(\" + (x ? Math.round(x) : 0) + \"px, \" + (y ? Math.round(y) : 0) + \"px, 0)\";\n    }\n\n  },\n  Scale: {\n    toString(transform) {\n      if (!transform) {\n        return;\n      }\n\n      const {\n        scaleX,\n        scaleY\n      } = transform;\n      return \"scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\";\n    }\n\n  },\n  Transform: {\n    toString(transform) {\n      if (!transform) {\n        return;\n      }\n\n      return [CSS.Translate.toString(transform), CSS.Scale.toString(transform)].join(' ');\n    }\n\n  },\n  Transition: {\n    toString(_ref) {\n      let {\n        property,\n        duration,\n        easing\n      } = _ref;\n      return property + \" \" + duration + \"ms \" + easing;\n    }\n\n  }\n});\n\nconst SELECTOR = 'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not(:disabled),*[tabindex]';\nfunction findFirstFocusableNode(element) {\n  if (element.matches(SELECTOR)) {\n    return element;\n  }\n\n  return element.querySelector(SELECTOR);\n}\n\nexport { CSS, add, canUseDOM, findFirstFocusableNode, getEventCoordinates, getOwnerDocument, getWindow, hasViewportRelativeCoordinates, isDocument, isHTMLElement, isKeyboardEvent, isNode, isSVGElement, isTouchEvent, isWindow, subtract, useCombinedRefs, useEvent, useInterval, useIsomorphicLayoutEffect, useLatestValue, useLazyMemo, useNodeRef, usePrevious, useUniqueId };\n//# sourceMappingURL=utilities.esm.js.map\n","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@wordpress/url\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@wordpress/html-entities\");","import PropTypes from 'prop-types';\nimport { useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { safeDecodeURI, filterURLForDisplay } from '@wordpress/url';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { Button } from '@wordpress/components';\nimport { close } from '@wordpress/icons';\n\nconst DragHandle = () => (\n\t<svg\n\t\twidth=\"18\"\n\t\theight=\"18\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 18 18\"\n\t\trole=\"img\"\n\t\taria-hidden=\"true\"\n\t\tfocusable=\"false\"\n\t>\n\t\t<path d=\"M5 4h2V2H5v2zm6-2v2h2V2h-2zm-6 8h2V8H5v2zm6 0h2V8h-2v2zm-6 6h2v-2H5v2zm6 0h2v-2h-2v2z\" />\n\t</svg>\n);\n\n/**\n * PickedItem Component\n *\n * This component renders a single item that can be ordered, displayed, and deleted.\n *\n * @param {object} props - The properties object.\n * @param {object} props.item - The item to be displayed, with properties like `uuid`, `title`, and `link`.\n * @param {boolean} props.isOrderable - Flag indicating whether the item can be reordered.\n * @param {number} props.index - Index of the item in the list.\n * @param {React.Component} props.displayComponent - The component used to display the item.\n * @param {object} props.displayComponentProps - Additional props to be passed to the display component.\n * @param {string} props.childElement - The HTML tag to be used for the item container.\n * @param {string} props.childClass - Additional class names to be added to the item container.\n * @param {Function} props.handleItemDelete - Callback function to handle item deletion.\n */\nconst PickedItem = ({\n\titem = {},\n\tisOrderable = false,\n\tindex = 0,\n\tdisplayComponent: DisplayComponent,\n\tdisplayComponentProps = {},\n\tchildElement = 'div',\n\tchildClass = '',\n\thandleItemDelete,\n}) => {\n\tconst { uuid, title, link } = item;\n\tconst { attributes, isDragging, listeners, setNodeRef, transform, transition } = useSortable({ id: uuid });\n\tconst style = {\n\t\ttransform: CSS.Transform.toString(transform),\n\t\ttransition,\n\t};\n\n\tif (!item) {\n\t\treturn null;\n\t}\n\n\tconst TagName = `${childElement}`;\n\n\treturn (\n\t\t<TagName\n\t\t\tclassName={`ds-content-picker__item ${childClass} ${isDragging ? 'is-dragging' : ''} ${\n\t\t\t\tDisplayComponent ? 'has-display-component' : ''\n\t\t\t}`}\n\t\t\tref={setNodeRef}\n\t\t\tstyle={style}\n\t\t>\n\t\t\t<div className=\"ds-content-picker__item-actions\">\n\t\t\t\t{isOrderable ? (\n\t\t\t\t\t<span {...attributes} {...listeners}>\n\t\t\t\t\t\t<DragHandle />\n\t\t\t\t\t\t<span>Re-Order</span>\n\t\t\t\t\t</span>\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)}\n\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\ticon={close}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\thandleItemDelete(item);\n\t\t\t\t\t}}\n\t\t\t\t\tclassName=\"ds-remove-content-item\"\n\t\t\t\t>\n\t\t\t\t\tRemove\n\t\t\t\t</Button>\n\t\t\t</div>\n\n\t\t\t{DisplayComponent ? (\n\t\t\t\t<DisplayComponent item={item} index={index} {...displayComponentProps} />\n\t\t\t) : (\n\t\t\t\t<span className=\"ds-content-picker__item-default\">\n\t\t\t\t\t<span className=\"item-title\">{decodeEntities(title?.rendered || '')}</span>\n\t\t\t\t\t<span className=\"item-info\">{filterURLForDisplay(safeDecodeURI(link)) || ''}</span>\n\t\t\t\t</span>\n\t\t\t)}\n\t\t</TagName>\n\t);\n};\n\nPickedItem.propTypes = {\n\titem: PropTypes.object.isRequired,\n\tisOrderable: PropTypes.bool,\n\tindex: PropTypes.number,\n\tdisplayComponent: PropTypes.elementType,\n\tchildElement: PropTypes.string,\n\tchildClass: PropTypes.string,\n\n\thandleItemDelete: PropTypes.func.isRequired,\n};\n\nexport default PickedItem;\n","import { DndContext, closestCenter, MouseSensor, TouchSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport {\n\tarrayMove,\n\tSortableContext,\n\tverticalListSortingStrategy,\n\thorizontalListSortingStrategy,\n} from '@dnd-kit/sortable';\nimport PropTypes from 'prop-types';\nimport PickedItem from './PickedItem';\n\n/**\n * SortableList is a component that provides functionality to display and reorder a list of posts.\n *\n * @param {object} props - The component props.\n * @param {object[]} props.posts - An array of post objects to display and sort.\n * @param {boolean} props.isOrderable - Flag to enable or disable the ordering functionality.\n * @param {string} props.sortOrientation - The orientation for sorting the list ('vertical' or 'horizontal').\n * @param {string} props.childElement - The HTML element type to wrap each post item.\n * @param {string} props.childClass - CSS class names to apply to the child elements.\n * @param {React.Component} props.displayComponent - A React component to display each post item.\n * @param {object} props.displayComponentProps - Props to pass to the display component.\n * @param {Function} props.handleItemDelete - Callback function to handle the deletion of a post item.\n * @param {Function} props.setPosts - Function to update the posts array after reordering.\n * @returns {JSX.Element} The rendered sortable list component.\n */\nconst SortableList = ({\n\tposts = [],\n\tisOrderable = false,\n\tsortOrientation = 'vertical',\n\tchildElement = 'div',\n\tchildClass = '',\n\tdisplayComponent = null,\n\tdisplayComponentProps = {},\n\thandleItemDelete,\n\tsetPosts,\n}) => {\n\tconst hasMultiplePosts = posts && posts.length > 1;\n\n\tconst items = posts.map((item) => item.uuid);\n\tconst sensors = useSensors(useSensor(MouseSensor), useSensor(TouchSensor));\n\n\t/**\n\t * Handles the drag end event for reordering posts.\n\t *\n\t * This function is invoked when a drag-and-drop action is completed. It updates\n\t * the order of posts by moving the dragged post to its new position.\n\t *\n\t * @param {object} event - The drag end event object.\n\t * @param {string} event.over.id - The unique identifier of the item over which the active item is dropped.\n\t */\n\tconst handleDragEnd = (event) => {\n\t\tconst { active, over } = event;\n\n\t\tif (active.id !== over.id) {\n\t\t\tconst oldIndex = posts.findIndex((post) => post.uuid === active.id);\n\t\t\tconst newIndex = posts.findIndex((post) => post.uuid === over.id);\n\n\t\t\tsetPosts(arrayMove(posts, oldIndex, newIndex));\n\t\t}\n\t};\n\n\treturn (\n\t\t<DndContext sensors={sensors} collisionDetection={closestCenter} onDragEnd={handleDragEnd}>\n\t\t\t<SortableContext\n\t\t\t\titems={items}\n\t\t\t\tstrategy={\n\t\t\t\t\tsortOrientation === 'horizontal' ? horizontalListSortingStrategy : verticalListSortingStrategy\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{posts.map((post, loopIndex) => (\n\t\t\t\t\t<PickedItem\n\t\t\t\t\t\tkey={post.uuid}\n\t\t\t\t\t\titem={post}\n\t\t\t\t\t\tisOrderable={hasMultiplePosts && isOrderable}\n\t\t\t\t\t\thandleItemDelete={handleItemDelete}\n\t\t\t\t\t\tindex={loopIndex}\n\t\t\t\t\t\tdisplayComponent={displayComponent}\n\t\t\t\t\t\tdisplayComponentProps={displayComponentProps}\n\t\t\t\t\t\tchildElement={childElement}\n\t\t\t\t\t\tchildClass={childClass}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</SortableContext>\n\t\t</DndContext>\n\t);\n};\n\nSortableList.propTypes = {\n\tposts: PropTypes.array.isRequired,\n\tisOrderable: PropTypes.bool,\n\tsortOrientation: PropTypes.string,\n\tdisplayComponent: PropTypes.elementType,\n\tdisplayComponentProps: PropTypes.object,\n\tchildElement: PropTypes.string,\n\tchildClass: PropTypes.string,\n\thandleItemDelete: PropTypes.func.isRequired,\n\tsetPosts: PropTypes.func.isRequired,\n};\n\nexport default SortableList;\n","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"prop-types\");","var __WEBPACK_NAMESPACE_OBJECT__ = require(\"@wordpress/rich-text\");","import PropTypes from 'prop-types';\nimport { safeDecodeURI, filterURLForDisplay } from '@wordpress/url';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { Button, TextHighlight, Tooltip, __experimentalTruncate as Truncate } from '@wordpress/components';\nimport { getTextContent, create } from '@wordpress/rich-text';\n\n/**\n * SearchItem component\n *\n * @typedef {object} Suggestion\n * @property {number} id - The unique identifier of the suggestion item.\n * @property {object} title - The title object of the suggestion item.\n * @property {string} [title.rendered] - The rendered title string for postType items.\n * @property {string} name - The name of the taxonomy item.\n * @property {string} link - The URL link associated with the suggestion item.\n * @property {number} parent - The parent identifier of the taxonomy item.\n * @param {object} props - The props object for the SearchItem component.\n * @param {Suggestion} props.suggestion - The suggestion data for the search item.\n * @param {string} props.searchTerm - The current search term used for highlighting.\n * @param {boolean} props.isSelected - Indicates if the search item is selected.\n * @param {string} props.pickerType - The type of picker, determines title rendering ('postType' or 'taxonomy').\n * @param {Function} props.onClick - Callback function to handle click event.\n *\n * @returns {JSX.Element} Search item component with highlighted search term and clickable link.\n */\nconst SearchItem = ({ suggestion = {}, searchTerm = '', isSelected = false, pickerType = 'postType', onClick }) => {\n\tconst { id, title = {}, name = '', link = '', parent = 0 } = suggestion;\n\tlet displayTitle = '';\n\n\tif (pickerType === 'postType') {\n\t\tdisplayTitle = title?.rendered || '';\n\t}\n\n\tif (pickerType === 'taxonomy') {\n\t\tdisplayTitle = name;\n\t}\n\n\tconst richTextContent = create({ html: displayTitle });\n\tconst textContent = getTextContent(richTextContent);\n\tconst titleContent = decodeEntities(textContent);\n\n\treturn (\n\t\t<>\n\t\t\t<Tooltip text={decodeEntities(displayTitle)}>\n\t\t\t\t<Button\n\t\t\t\t\tid={id}\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t\tclassName={`ds-component-content-search__list-item-button ${isSelected && 'is-selected'}`}\n\t\t\t\t>\n\t\t\t\t\t<span className=\"item-title\">\n\t\t\t\t\t\t{parent > 0 && <span>- </span>}\n\t\t\t\t\t\t<TextHighlight text={titleContent} highlight={searchTerm} />\n\t\t\t\t\t</span>\n\t\t\t\t\t{link && (\n\t\t\t\t\t\t<span className=\"item-info\">\n\t\t\t\t\t\t\t<Truncate numberOfLines={1} limit={55} ellipsizeMode=\"middle\">\n\t\t\t\t\t\t\t\t{filterURLForDisplay(safeDecodeURI(link)) || ''}\n\t\t\t\t\t\t\t</Truncate>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t</Button>\n\t\t\t</Tooltip>\n\t\t</>\n\t);\n};\n\nSearchItem.propTypes = {\n\tsuggestion: PropTypes.object.isRequired,\n\tsearchTerm: PropTypes.string,\n\tisSelected: PropTypes.bool,\n\tpickerType: PropTypes.string,\n\tonClick: PropTypes.func.isRequired,\n};\n\nexport default SearchItem;\n","import PropTypes from 'prop-types';\nimport { useSelect } from '@wordpress/data';\nimport { store as coreDataStore } from '@wordpress/core-data';\nimport { useState } from '@wordpress/element';\nimport { TextControl, Spinner, NavigableMenu } from '@wordpress/components';\nimport SearchItem from './SearchItem';\n\n/**\n * The `ContentSearch` component is designed to facilitate content search functionality within a user interface.\n *\n * It features a search input with configurable properties, such as placeholder, label, per page results, selected items, and search columns.\n * The component fetches items from the core data store based on the search keyword and other parameters,\n * and excludes already selected items from the search results.\n *\n * @param {object} props The properties or parameters required by the component.\n * @param {string} props.placeholder The placeholder text for the search input (default: 'Search').\n * @param {string} props.label The label text for the search input (default: '').\n * @param {number} props.perPage The number of results to display per page (default: 20).\n * @param {Array<object>} props.selectedItems The array of items that are already selected (default: []).\n * @param {Array<string>} props.searchColumns The columns to be considered for the search (default: ['post_title', 'post_content']).\n * @param {string} props.pickerType The type of picker, e.g., 'postType' or 'taxonomy' (default: 'postType').\n * @param {string} props.entityType The type of entity to search, e.g., 'post' or 'term' (default: 'post').\n * @param {Array<string>} props.storeKeys The keys to store in the reducer (default: []).\n * @param {Function} props.onSelectItem Callback function to be called when an item is selected.\n *\n * @returns {JSX.Element} The rendered ContentSearch component.\n */\nexport const ContentSearch = ({\n\tplaceholder = 'Search',\n\tlabel = '',\n\tperPage = 20,\n\tselectedItems = [],\n\tsearchColumns = ['post_title', 'post_content'],\n\tpickerType = 'postType',\n\tentityType = 'post',\n\tstoreKeys = [],\n\tonSelectItem,\n}) => {\n\tconst [searchString, setSearchString] = useState('');\n\tconst [selectedItem, setSelectedItem] = useState(null);\n\n\tconst { items, hasResolved } = useSelect(\n\t\t(select) => {\n\t\t\tconst query = {};\n\n\t\t\tif (pickerType === 'postType') {\n\t\t\t\tquery.status = 'publish';\n\t\t\t\tquery.post_type = entityType;\n\t\t\t}\n\n\t\t\tif (perPage) {\n\t\t\t\tquery.per_page = perPage;\n\t\t\t}\n\n\t\t\tif (pickerType === 'taxonomy') {\n\t\t\t\tquery.hide_empty = true;\n\t\t\t}\n\n\t\t\tif (searchString) {\n\t\t\t\tquery.search = searchString;\n\t\t\t\tif (pickerType === 'postType') {\n\t\t\t\t\tquery.orderby = 'parent';\n\t\t\t\t}\n\t\t\t\tquery.order = 'asc';\n\t\t\t}\n\n\t\t\tif (pickerType === 'postType') {\n\t\t\t\tquery.search_columns = searchColumns;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\titems: select(coreDataStore).getEntityRecords(pickerType, entityType, query),\n\t\t\t\thasResolved: select(coreDataStore).hasFinishedResolution('getEntityRecords', [\n\t\t\t\t\tpickerType,\n\t\t\t\t\tentityType,\n\t\t\t\t\tquery,\n\t\t\t\t]),\n\t\t\t};\n\t\t},\n\t\t[searchString, entityType],\n\t);\n\n\t// Filter out already selected items\n\tlet filteredItems = [];\n\tif (hasResolved && items && items.length) {\n\t\tfilteredItems = items.filter((item) => !selectedItems.some((selectedItem) => selectedItem.id === item.id));\n\t}\n\n\tconst reduceItem = (item) => {\n\t\tconst reducedItem = {};\n\n\t\tif (storeKeys && storeKeys.length === 0) {\n\t\t\treturn item;\n\t\t}\n\n\t\t// Always include 'uuid' if it exists\n\t\tif (item.hasOwnProperty('uuid')) {\n\t\t\treducedItem.uuid = item.uuid;\n\t\t}\n\n\t\tstoreKeys.forEach((key) => {\n\t\t\tif (item.hasOwnProperty(key)) {\n\t\t\t\treducedItem[key] = item[key];\n\t\t\t}\n\t\t});\n\n\t\treturn reducedItem;\n\t};\n\n\t/**\n\t * A function that handles the action of navigating to a specific item.\n\t *\n\t * If the item is 0, it sets the selected item to null.\n\t * Otherwise, it reduces the item using the `reduceItem` function and sets it as the selected item.\n\t *\n\t * @param {number} item - The item to navigate to.\n\t */\n\tconst handleOnNavigate = (item) => {\n\t\tif (item === 0) {\n\t\t\tsetSelectedItem(null);\n\t\t}\n\n\t\tconst itemToStore = reduceItem(item);\n\t\tsetSelectedItem(itemToStore);\n\t};\n\n\t/**\n\t * Handles the selection of an item. This function performs the following actions:\n\t * - Clears the current search string.\n\t * - Reduces the item to a more manageable form.\n\t * - Invokes the onSelectItem function with the reduced item.\n\t *\n\t * @param {object} item - The item that has been selected.\n\t * @function handleItemSelection\n\t */\n\tconst handleItemSelection = (item) => {\n\t\tsetSearchString('');\n\n\t\tconst itemToStore = reduceItem(item);\n\n\t\tonSelectItem(itemToStore);\n\t};\n\n\t/**\n\t * Handles the change event for the search string input.\n\t *\n\t * @param {string} keyword - The keyword added to the search input.\n\t * Updates the search string state with the provided keyword.\n\t */\n\tconst handleSearchStringChange = (keyword) => {\n\t\tsetSearchString(keyword);\n\t};\n\n\tconst hasSearchString = !!searchString.length;\n\tconst hasSearchResults = filteredItems && !!filteredItems.length;\n\tconst isLoading = !hasResolved;\n\n\treturn (\n\t\t<div className=\"ds-component-content-search\">\n\t\t\t<NavigableMenu onNavigate={handleOnNavigate} orientation=\"vertical\">\n\t\t\t\t<div className=\"ds-component-content-search__wrap\">\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\tvalue={searchString}\n\t\t\t\t\t\tonChange={(newSearchString) => handleSearchStringChange(newSearchString)}\n\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t{hasSearchString ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ul className=\"ds-component-content-search__list\">\n\t\t\t\t\t\t\t{isLoading && (\n\t\t\t\t\t\t\t\t<li className=\"ds-component-content-search__list-spinner\">\n\t\t\t\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{!isLoading && !hasSearchResults && (\n\t\t\t\t\t\t\t\t<li className=\"ds-component-content-search__list-item nothing-found\">\n\t\t\t\t\t\t\t\t\tNothing found for the selected query.\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{!isLoading &&\n\t\t\t\t\t\t\t\thasSearchResults &&\n\t\t\t\t\t\t\t\tfilteredItems.map((item, index) => {\n\t\t\t\t\t\t\t\t\tconst { title, name } = item;\n\n\t\t\t\t\t\t\t\t\tif (pickerType === 'postType' && title && !title.rendered.length) {\n\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (pickerType === 'taxonomy' && !name) {\n\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<li key={item.id} className=\"ds-component-content-search__list-item\">\n\t\t\t\t\t\t\t\t\t\t\t<SearchItem\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleItemSelection(item)}\n\t\t\t\t\t\t\t\t\t\t\t\tsearchTerm={searchString}\n\t\t\t\t\t\t\t\t\t\t\t\tsuggestion={item}\n\t\t\t\t\t\t\t\t\t\t\t\tisSelected={selectedItem === index + 1}\n\t\t\t\t\t\t\t\t\t\t\t\tpickerType={pickerType}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</>\n\t\t\t\t) : null}\n\t\t\t</NavigableMenu>\n\t\t</div>\n\t);\n};\n\nSearchItem.ContentSearch = {\n\tplaceholder: PropTypes.string,\n\tlabel: PropTypes.string,\n\tperPage: PropTypes.number,\n\tselectedItems: PropTypes.array,\n\tsearchColumns: PropTypes.array,\n\tpickerType: PropTypes.string,\n\tentityType: PropTypes.string,\n\tstoreKeys: PropTypes.array,\n\tonSelectItem: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport SortableList from './SortableList';\nimport { ContentSearch } from '../content-search';\n\n/**\n * ContentPicker component for selecting and ordering content items.\n *\n * @param {object} props - The properties object.\n * @param {object[]} [props.items=[]] - Array of selected content items.\n * @param {string} [props.searchLabel=''] - Label for the search input.\n * @param {string} [props.searchPlaceholder='Search'] - Placeholder for the search input.\n * @param {number} [props.searchPerPage=20] - Number of results to display per page in the search.\n * @param {string[]} [props.searchColumns=['post_title', 'post_content']] - Columns to search within content.\n * @param {boolean} [props.isOrderable=true] - Whether the selected items can be reordered.\n * @param {number} [props.maxContentItems=99] - Maximum number of items that can be selected.\n * @param {string} [props.wrapperClass=''] - CSS class for the wrapper element.\n * @param {string} [props.wrapperElement='div'] - HTML element type for the wrapper.\n * @param {string} [props.childElement='div'] - HTML element type for each child item.\n * @param {string} [props.childClass=''] - CSS class for each child item.\n * @param {string} [props.sortOrientation='vertical'] - Orientation of the sortable list ('vertical' or 'horizontal').\n * @param {string} [props.pickerType='postType'] - Type of items being picked.\n * @param {string} [props.entityType='post'] - Entity type of the content items.\n * @param {string[]} [props.storeKeys=[]] - Keys to identify store for fetching content.\n * @param {React.Component|null} [props.displayComponent=null] - Custom component for displaying content items.\n * @param {object} [props.displayComponentProps={}] - Props to pass to the custom display component.\n * @param {Function} props.onPickChange - Callback function called when the selected items change.\n */\nexport const ContentPicker = ({\n\titems = [],\n\tsearchLabel = '',\n\tsearchPlaceholder = 'Search',\n\tsearchPerPage = 20,\n\tsearchColumns = ['post_title', 'post_content'],\n\tisOrderable = true,\n\tmaxContentItems = 99,\n\twrapperClass = '',\n\twrapperElement = 'div',\n\tchildElement = 'div',\n\tchildClass = '',\n\tsortOrientation = 'vertical',\n\tpickerType = 'postType',\n\tentityType = 'post',\n\tstoreKeys = [],\n\tdisplayComponent = null,\n\tdisplayComponentProps = {},\n\tonPickChange,\n}) => {\n\tconst handleSelect = (item) => {\n\t\tconst newItems = [\n\t\t\t...items,\n\t\t\t{\n\t\t\t\tuuid: uuidv4(),\n\t\t\t\t...item,\n\t\t\t},\n\t\t];\n\t\tonPickChange(newItems);\n\t};\n\n\tconst onDeleteItem = (deletedItem) => {\n\t\tconst newItems = items.filter(({ id, uuid }) => {\n\t\t\tif (deletedItem.uuid) {\n\t\t\t\treturn uuid !== deletedItem.uuid;\n\t\t\t}\n\t\t\treturn id !== deletedItem.id;\n\t\t});\n\n\t\tonPickChange(newItems);\n\t};\n\n\tconst TagName = `${wrapperElement}`;\n\n\treturn (\n\t\t<div className=\"ds-content-picker\">\n\t\t\t<div className=\"ds-content-picker__wrap\">\n\t\t\t\t{!items.length || (items.length && items.length < maxContentItems) ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ContentSearch\n\t\t\t\t\t\t\tplaceholder={searchPlaceholder}\n\t\t\t\t\t\t\tlabel={searchLabel}\n\t\t\t\t\t\t\tonSelectItem={handleSelect}\n\t\t\t\t\t\t\tselectedItems={items}\n\t\t\t\t\t\t\tperPage={searchPerPage}\n\t\t\t\t\t\t\tsearchColumns={searchColumns}\n\t\t\t\t\t\t\tpickerType={pickerType}\n\t\t\t\t\t\t\tentityType={entityType}\n\t\t\t\t\t\t\tstoreKeys={storeKeys}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)}\n\n\t\t\t\t{items?.length ? (\n\t\t\t\t\t// this is render\n\t\t\t\t\t<TagName className={`ds-content-picker__items ${wrapperClass}`}>\n\t\t\t\t\t\t<SortableList\n\t\t\t\t\t\t\tposts={items}\n\t\t\t\t\t\t\tisOrderable={isOrderable}\n\t\t\t\t\t\t\thandleItemDelete={onDeleteItem}\n\t\t\t\t\t\t\tsetPosts={onPickChange}\n\t\t\t\t\t\t\tdisplayComponent={displayComponent}\n\t\t\t\t\t\t\tdisplayComponentProps={displayComponentProps}\n\t\t\t\t\t\t\tsortOrientation={sortOrientation}\n\t\t\t\t\t\t\tchildElement={childElement}\n\t\t\t\t\t\t\tchildClass={childClass}\n\t\t\t\t\t\t\tpickerType={pickerType}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TagName>\n\t\t\t\t) : (\n\t\t\t\t\t<div className=\"ds-content-picker__no-items\">\n\t\t\t\t\t\t<span>{`You don't have any items selected.`}</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t{items.length && items.length >= maxContentItems ? (\n\t\t\t\t\t<div className=\"ds-content-picker__max-items\">\n\t\t\t\t\t\t<span>{`You selected the max number of items (${maxContentItems})`}</span>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nContentPicker.propTypes = {\n\titems: PropTypes.array,\n\tsearchLabel: PropTypes.string,\n\tsearchPlaceholder: PropTypes.string,\n\tsearchPerPage: PropTypes.number,\n\tsearchColumns: PropTypes.array,\n\tisOrderable: PropTypes.bool,\n\tmaxContentItems: PropTypes.number,\n\twrapperClass: PropTypes.string,\n\twrapperElement: PropTypes.string,\n\tchildElement: PropTypes.string,\n\tchildClass: PropTypes.string,\n\tsortOrientation: PropTypes.string,\n\tpickerType: PropTypes.string,\n\tentityType: PropTypes.string,\n\tstoreKeys: PropTypes.array,\n\tdisplayComponent: PropTypes.elementType,\n\tdisplayComponentProps: PropTypes.object,\n\tonPickChange: PropTypes.func.isRequired,\n};\n"],"names":["l","Symbol","for","n","p","q","r","t","u","v","w","x","y","z","iterator","B","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","C","Object","assign","D","E","a","b","e","this","props","context","refs","updater","F","G","prototype","isReactComponent","setState","Error","forceUpdate","H","constructor","isPureReactComponent","I","Array","isArray","J","hasOwnProperty","K","current","L","key","ref","__self","__source","M","d","c","k","h","call","g","arguments","length","children","f","m","defaultProps","$$typeof","type","_owner","O","P","Q","replace","escape","toString","R","N","push","A","next","done","value","String","keys","join","S","T","_status","_result","then","default","U","V","transition","W","ReactCurrentDispatcher","ReactCurrentBatchConfig","ReactCurrentOwner","X","exports","Fragment","module","hasOwn","classNames","classes","i","arg","appendClass","parseValue","apply","includes","newClass","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","__esModule","definition","o","defineProperty","enumerable","get","obj","prop","toStringTag","require","getMedia","attachmentId","useSelect","select","isResolving","hasFinishedResolution","coreStore","mediaParameters","mediaDetails","isResolvingMedia","hasResolvedMedia","getEditorSettings","getSettings","blockEditorStore","getPoster","size","media","posterUrl","sizes","source_url","isResolvingPoster","hasResolvedPoster","getOutsideClickRef","onClickOutside","useRef","useEffect","listener","event","contains","target","document","addEventListener","removeEventListener","getPosts","postType","queryParams","getEntityRecords","hasStartedResolution","query","per_page","selectorArgs","posts","getPost","postId","getEntityRecord","post","getSiteSettings","settings","getAuthor","getUser","hasResolvedPost","_authorId","author","authorData","hasResolvedAuthor","isResolvingAuthor","getPostTerms","taxonomyName","itemSelector","termsSelector","include","terms","hasResolvedTerms","isResolvingTerms","getTerms","onClickNotice","instanceId","message","createWarningNotice","removeNotice","useDispatch","noticeStore","noticeId","preventDefault","id","MediaToolbar","onSelect","onRemove","mediaType","multiple","hasMedia","createElement","ToolbarGroup","label","MediaReplaceFlow","mediaUrl","name","ToolbarButton","onClick","MediaUploadCheck","MediaUpload","allowedTypes","render","open","MediaPanelContent","displayFocalPicker","allowMediaTypeSwitch","controlPanelLabel","showBlockControls","imageSize","lazyLoad","srcset","videoSource","videoUrl","focalPoint","videoControls","autoplay","isMuted","showControls","posterId","posterSize","imageSizes","availableImageSizes","setAvailableImageSizes","useState","map","slug","embedPreview","getEmbedPreview","Spinner","imageUrl","media_details","handleMediaChange","newMediaData","handleMediaRemove","handleVideoColtrol","newVideoControls","PanelBody","title","ToggleGroupControl","isBlock","onChange","newType","handleMediaTypeChange","ToggleGroupControlOption","selectedMedia","FocalPointPicker","url","newValues","ToggleControl","__nextHasNoMarginBottom","checked","help","ImageSizeControl","isResizable","onChangeImage","newSize","imageSizeOptions","TextControl","newVideoUrl","className","dangerouslySetInnerHTML","__html","html","Video","isPreview","imageSizeHelp","MediaPlaceholder","labels","instructions","accept","BlockControls","group","defaultMediaProps","isBackground","isControl","MediaPicker","mergedProps","InspectorControls","Image","rest","hasImage","altText","alt_text","focalPointStyle","objectFit","objectPosition","style","_extends","src","classnames","alt","Placeholder","withIllustration","defaultVideoControls","mergedVideoControls","mediaResolving","mime_type","additionalAtts","poster","muted","controls","disablePictureInPicture","defaultMedia","MediaDisplay","mergedMedia","ThemeIcon","icon","width","height","role","href","IconPanelContent","panelTitle","isExpanded","icons","setIcons","selectedIcon","setSelectedIcon","async","response","apiFetch","path","error","console","log","warn","fetchIcons","initialOpen","handleIconSelect","defaultIconProps","IconPicker","defaultOverlay","hasOverlay","overlayColor","overlayGradient","overlayOpacity","overlayType","OverlayDisplay","overlay","mergedOverlay","styles","opacity","css_class_name","colorSlug","gradientSlug","OverlayPanelContent","colors","gradients","handleOverlayChange","newOverlayData","RangeControl","__nextHasNoMargin","min","max","ColorPalette","color","colorHex","matchingItem","find","item","handleColorSelect","disableCustomColors","GradientPicker","gradient","currentGradient","handleGradientSelect","disableCustomGradients","asButtons","OverlayPicker","Repeater","defaultValue","addButtonLabel","removeButtonLabel","minItems","maxItems","initialItems","removeLayout","addItem","defaultValueCopy","uuid","removeItem","index","valueCopy","JSON","parse","stringify","filter","innerIndex","numberofItemsToAdd","count","newItem","addInitialItems","plusCircle","removeComponent","Button","close","React","val","newValue","setItem","variant","iconPosition","getSuggestionsQuery","kind","subtype","Link","opensInNewTab","placeholder","controlLabel","onLinkChange","onTextChange","onLinkRemove","isPopoverVisible","setIsPopoverVisible","isValidLink","setIsValidLink","linkRef","popoverRef","closePopover","link","RichText","tagName","__unstablePastePlainText","allowedFormats","openPopover","Tooltip","text","Icon","Popover","anchor","focusOnMount","LinkControl","hasTextControl","showInitialSuggestions","noDirectEntry","noURLSuggestion","suggestionsQuery","LinkWrap","linkText","showLinkControl","TagName","window","CSS","freeze","Translate","transform","Math","round","Scale","scaleX","scaleY","Transform","Transition","_ref","property","duration","easing","DragHandle","xmlns","viewBox","focusable","PickedItem","isOrderable","displayComponent","DisplayComponent","displayComponentProps","childElement","childClass","handleItemDelete","attributes","isDragging","listeners","setNodeRef","useSortable","decodeEntities","rendered","filterURLForDisplay","safeDecodeURI","SortableList","sortOrientation","setPosts","hasMultiplePosts","items","sensors","useSensors","useSensor","MouseSensor","TouchSensor","DndContext","collisionDetection","closestCenter","onDragEnd","active","over","oldIndex","findIndex","newIndex","arrayMove","SortableContext","strategy","horizontalListSortingStrategy","verticalListSortingStrategy","loopIndex","SearchItem","suggestion","searchTerm","isSelected","pickerType","parent","displayTitle","richTextContent","create","textContent","getTextContent","titleContent","TextHighlight","highlight","Truncate","numberOfLines","limit","ellipsizeMode","ContentSearch","perPage","selectedItems","searchColumns","entityType","storeKeys","onSelectItem","searchString","setSearchString","selectedItem","setSelectedItem","hasResolved","status","post_type","hide_empty","search","orderby","order","search_columns","coreDataStore","filteredItems","some","reduceItem","reducedItem","forEach","hasSearchString","hasSearchResults","isLoading","NavigableMenu","onNavigate","itemToStore","orientation","newSearchString","autoComplete","handleItemSelection","PropTypes","isRequired","ContentPicker","searchLabel","searchPlaceholder","searchPerPage","maxContentItems","wrapperClass","wrapperElement","onPickChange","newItems","uuidv4","deletedItem"],"sourceRoot":""}